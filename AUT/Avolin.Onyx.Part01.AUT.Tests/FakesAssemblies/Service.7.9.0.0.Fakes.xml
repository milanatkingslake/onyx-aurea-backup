<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Service.7.9.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:CmService.Service.Fakes.ShimAbstractEntity">
            <summary>Shim type of CmService.Service.AbstractEntity</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimAbstractEntity.#ctor(CmService.Service.AbstractEntity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimAbstractEntity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAbstractEntity.AllInstances.EntityNameGet">
            <summary>Sets the shim of AbstractEntity.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAbstractEntity.AllInstances.GetWatchListByUserIdMessage">
            <summary>Sets the shim of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAbstractEntity.AllInstances.SearchStream">
            <summary>Sets the shim of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAbstractEntity.AllInstances.UpdateStream">
            <summary>Sets the shim of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAbstractEntity.AllInstances.WatchMessage">
            <summary>Sets the shim of AbstractEntity.Watch(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimAbstractEntity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimAbstractEntity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAbstractEntity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAbstractEntity.Constructor">
            <summary>Sets the shim of AbstractEntity.AbstractEntity()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAbstractEntity.EntityNameGet">
            <summary>Sets the shim of AbstractEntity.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAbstractEntity.GetWatchListByUserIdMessage">
            <summary>Sets the shim of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAbstractEntity.SearchStream">
            <summary>Sets the shim of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAbstractEntity.UpdateStream">
            <summary>Sets the shim of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAbstractEntity.WatchMessage">
            <summary>Sets the shim of AbstractEntity.Watch(Message message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimAnalytics">
            <summary>Shim type of CmService.Service.Analytics</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimAnalytics.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimAnalytics.#ctor(CmService.Service.Analytics)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimAnalytics.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAnalytics.AllInstances.GetAnalyticsDetailMessage">
            <summary>Sets the shim of Analytics.GetAnalyticsDetail(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimAnalytics.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimAnalytics.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAnalytics.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimAnalytics.Bind(Onyx.GatewayContract.IAnalytics)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAnalytics.Constructor">
            <summary>Sets the shim of Analytics.Analytics()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAnalytics.GetAnalyticsDetailMessage">
            <summary>Sets the shim of Analytics.GetAnalyticsDetail(Message message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimApplicationConfiguration">
            <summary>Shim type of CmService.Service.ApplicationConfiguration</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimApplicationConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimApplicationConfiguration.#ctor(CmService.Service.ApplicationConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimApplicationConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimApplicationConfiguration.AllInstances.BrowseNavigatorSearchEntitiesMessage">
            <summary>Sets the shim of ApplicationConfiguration.BrowseNavigatorSearchEntities(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimApplicationConfiguration.AllInstances.CheckUIResourcePermissionStringHashtable">
            <summary>Sets the shim of ApplicationConfiguration.CheckUIResourcePermission(String xml, Hashtable parameterCollection)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimApplicationConfiguration.AllInstances.GetOnyxMobileConfigurationMessage">
            <summary>Sets the shim of ApplicationConfiguration.GetOnyxMobileConfiguration(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimApplicationConfiguration.AllInstances.GetOnyxMobileHomePageMessage">
            <summary>Sets the shim of ApplicationConfiguration.GetOnyxMobileHomePage(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimApplicationConfiguration.AllInstances.GetOnyxMobileUserLinksMessage">
            <summary>Sets the shim of ApplicationConfiguration.GetOnyxMobileUserLinks(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimApplicationConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimApplicationConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimApplicationConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimApplicationConfiguration.Bind(Onyx.GatewayContract.IApplicationConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimApplicationConfiguration.BrowseNavigatorSearchEntitiesMessage">
            <summary>Sets the shim of ApplicationConfiguration.BrowseNavigatorSearchEntities(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimApplicationConfiguration.CheckUIResourcePermissionStringHashtable">
            <summary>Sets the shim of ApplicationConfiguration.CheckUIResourcePermission(String xml, Hashtable parameterCollection)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimApplicationConfiguration.Constructor">
            <summary>Sets the shim of ApplicationConfiguration.ApplicationConfiguration()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimApplicationConfiguration.GetOnyxMobileConfigurationMessage">
            <summary>Sets the shim of ApplicationConfiguration.GetOnyxMobileConfiguration(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimApplicationConfiguration.GetOnyxMobileHomePageMessage">
            <summary>Sets the shim of ApplicationConfiguration.GetOnyxMobileHomePage(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimApplicationConfiguration.GetOnyxMobileUserLinksMessage">
            <summary>Sets the shim of ApplicationConfiguration.GetOnyxMobileUserLinks(Message message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimAppointment">
            <summary>Shim type of CmService.Service.Appointment</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimAppointment.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimAppointment.#ctor(CmService.Service.Appointment)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimAppointment.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAppointment.AllInstances.EntityNameGet">
            <summary>Sets the shim of Appointment.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimAppointment.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimAppointment.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAppointment.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimAppointment.Bind(Onyx.GatewayContract.IAppointment)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAppointment.Constructor">
            <summary>Sets the shim of Appointment.Appointment()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimAppointment.EntityNameGet">
            <summary>Sets the shim of Appointment.get_EntityName()</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimBatch">
            <summary>Shim type of CmService.Service.Batch</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimBatch.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimBatch.#ctor(CmService.Service.Batch)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimBatch.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimBatch.AllInstances.BatchUpdateRecallDateStream">
            <summary>Sets the shim of Batch.BatchUpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimBatch.AllInstances.BatchUpdateStream">
            <summary>Sets the shim of Batch.BatchUpdate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimBatch.AllInstances.GetBatchUpdatableFieldsMessage">
            <summary>Sets the shim of Batch.GetBatchUpdatableFields(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimBatch.BatchUpdateRecallDateStream">
            <summary>Sets the shim of Batch.BatchUpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimBatch.BatchUpdateStream">
            <summary>Sets the shim of Batch.BatchUpdate(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimBatch.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimBatch.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimBatch.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimBatch.Bind(Onyx.GatewayContract.IBatchUpdate)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimBatch.Constructor">
            <summary>Sets the shim of Batch.Batch()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimBatch.GetBatchUpdatableFieldsMessage">
            <summary>Sets the shim of Batch.GetBatchUpdatableFields(Message message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimColumnDefinition1">
            <summary>Shim type of CmService.Service.ColumnDefinition1</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimColumnDefinition1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimColumnDefinition1.#ctor(CmService.Service.ColumnDefinition1)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimColumnDefinition1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimColumnDefinition1.AllInstances.ColumnDefinitionGet">
            <summary>Sets the shim of ColumnDefinition1.get_ColumnDefinition()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimColumnDefinition1.AllInstances.ColumnDefinitionSetListOfObject">
            <summary>Sets the shim of ColumnDefinition1.set_ColumnDefinition(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimColumnDefinition1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimColumnDefinition1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimColumnDefinition1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimColumnDefinition1.ColumnDefinitionGet">
            <summary>Sets the shim of ColumnDefinition1.get_ColumnDefinition()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimColumnDefinition1.ColumnDefinitionSetListOfObject">
            <summary>Sets the shim of ColumnDefinition1.set_ColumnDefinition(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimColumnDefinition1.Constructor">
            <summary>Sets the shim of ColumnDefinition1.ColumnDefinition1()</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimCommon">
            <summary>Shim type of CmService.Service.Common</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCommon.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCommon.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCommon.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCommon.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCommon.GenerateResponse">
            <summary>Sets the shim of Common.GenerateResponse()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCommon.GetExceptionMessageStringStringException">
            <summary>Sets the shim of Common.GetExceptionMessage(String handle, String caption, Exception exception)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCommon.GetParametersFromQueryStringBooleanString">
            <summary>Sets the shim of Common.GetParametersFromQueryString(Boolean isFromLogin, String encodedParameter)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCommon.GetRequestParametersOperationPropertiesStreamBoolean">
            <summary>Sets the shim of Common.GetRequestParameters(OperationProperties op, Stream message, Boolean isFromLogin)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCommon.GetRequestParametersPlainOperationPropertiesStreamBoolean">
            <summary>Sets the shim of Common.GetRequestParametersPlain(OperationProperties op, Stream message, Boolean isFromLogin)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCommon.GetRequestParametersStreamForSearchOperationPropertiesStreamBoolean">
            <summary>Sets the shim of Common.GetRequestParametersStreamForSearch(OperationProperties op, Stream message, Boolean isFromLogin)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCommon.GetRequestParametersStreamOperationPropertiesStreamBoolean">
            <summary>Sets the shim of Common.GetRequestParametersStream(OperationProperties op, Stream message, Boolean isFromLogin)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCommon.GetRootInnerExceptionException">
            <summary>Sets the shim of Common.GetRootInnerException(Exception ex)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCommon.GetUtf16StringStream">
            <summary>Sets the shim of Common.GetUtf16String(Stream stream)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCommon.ProcessErrorExceptionHashtableString">
            <summary>Sets the shim of Common.ProcessError(Exception e, Hashtable parameterCollection, String key)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCommon.ProcessErrorExceptionOperationProperties">
            <summary>Sets the shim of Common.ProcessError(Exception e, OperationProperties op)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimCompany">
            <summary>Shim type of CmService.Service.Company</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCompany.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCompany.#ctor(CmService.Service.Company)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimCompany.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCompany.AllInstances.EntityNameGet">
            <summary>Sets the shim of Company.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCompany.AllInstances.GetCompanyByIdMessage">
            <summary>Sets the shim of Company.GetCompanyById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCompany.AllInstances.GetCompanyFieldMetaDataMessage">
            <summary>Sets the shim of Company.GetCompanyFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCompany.AllInstances.GetCompanyLBOParameterMessage">
            <summary>Sets the shim of Company.GetCompanyLBOParameter(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCompany.AllInstances.GetDetailsViewByIdMessage">
            <summary>Sets the shim of Company.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCompany.AllInstances.SaveStream">
            <summary>Sets the shim of Company.Save(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCompany.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCompany.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCompany.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCompany.Bind(Onyx.GatewayContract.ICompany)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCompany.Constructor">
            <summary>Sets the shim of Company.Company()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCompany.EntityNameGet">
            <summary>Sets the shim of Company.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCompany.GetCompanyByIdMessage">
            <summary>Sets the shim of Company.GetCompanyById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCompany.GetCompanyFieldMetaDataMessage">
            <summary>Sets the shim of Company.GetCompanyFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCompany.GetCompanyLBOParameterMessage">
            <summary>Sets the shim of Company.GetCompanyLBOParameter(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCompany.GetDetailsViewByIdMessage">
            <summary>Sets the shim of Company.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCompany.SaveStream">
            <summary>Sets the shim of Company.Save(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimConnectivity">
            <summary>Shim type of CmService.Service.Connectivity</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimConnectivity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimConnectivity.#ctor(CmService.Service.Connectivity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimConnectivity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimConnectivity.AllInstances.CheckServiceMessage">
            <summary>Sets the shim of Connectivity.CheckService(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimConnectivity.AllInstances.GetAppSettingsMessage">
            <summary>Sets the shim of Connectivity.GetAppSettings(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimConnectivity.AllInstances.GetEntityMappingMobileMessage">
            <summary>Sets the shim of Connectivity.GetEntityMappingMobile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimConnectivity.AllInstances.GetOgsInstanceDetailsMessage">
            <summary>Sets the shim of Connectivity.GetOgsInstanceDetails(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimConnectivity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimConnectivity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimConnectivity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimConnectivity.CheckServiceMessage">
            <summary>Sets the shim of Connectivity.CheckService(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimConnectivity.Constructor">
            <summary>Sets the shim of Connectivity.Connectivity()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimConnectivity.GetAppSettingsMessage">
            <summary>Sets the shim of Connectivity.GetAppSettings(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimConnectivity.GetEntityMappingMobileMessage">
            <summary>Sets the shim of Connectivity.GetEntityMappingMobile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimConnectivity.GetOgsInstanceDetailsMessage">
            <summary>Sets the shim of Connectivity.GetOgsInstanceDetails(Message message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimContext">
            <summary>Shim type of CmService.Service.Context</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimContext.#ctor(CmService.Service.Context)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimContext.AllInstances.SessionSecondsRemainingGet">
            <summary>Sets the shim of Context.get_SessionSecondsRemaining()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimContext.AllInstances.SessionSecondsRemainingSetString">
            <summary>Sets the shim of Context.set_SessionSecondsRemaining(String value)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimContext.Constructor">
            <summary>Sets the shim of Context.Context()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimContext.SessionSecondsRemainingGet">
            <summary>Sets the shim of Context.get_SessionSecondsRemaining()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimContext.SessionSecondsRemainingSetString">
            <summary>Sets the shim of Context.set_SessionSecondsRemaining(String value)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimCustomer">
            <summary>Shim type of CmService.Service.Customer</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomer.#ctor(CmService.Service.Customer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimCustomer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.AllInstances.GetSearchDataLboMessage">
            <summary>Sets the shim of Customer.GetSearchDataLbo(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.AllInstances.GetSearchMetaDataMessage">
            <summary>Sets the shim of Customer.GetSearchMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.AllInstances.GetSearchResultMetaDataMessage">
            <summary>Sets the shim of Customer.GetSearchResultMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.AllInstances.MergeMessage">
            <summary>Sets the shim of Customer.Merge(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.AllInstances.RecentCustomersMessage">
            <summary>Sets the shim of Customer.RecentCustomers(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.AllInstances.RetrieveFavoriteCompaniesMessage">
            <summary>Sets the shim of Customer.RetrieveFavoriteCompanies(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.AllInstances.RetrieveFavoriteIndividualMessage">
            <summary>Sets the shim of Customer.RetrieveFavoriteIndividual(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.AllInstances.SearchForMobileStream">
            <summary>Sets the shim of Customer.SearchForMobile(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.AllInstances.SortbyNodeXmlDocumentString">
            <summary>Sets the shim of Customer.SortbyNode(XmlDocument xmlDoc, String columnName)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomer.Bind(Onyx.GatewayContract.ICustomer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.Constructor">
            <summary>Sets the shim of Customer.Customer()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.GetSearchDataLboMessage">
            <summary>Sets the shim of Customer.GetSearchDataLbo(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.GetSearchMetaDataMessage">
            <summary>Sets the shim of Customer.GetSearchMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.GetSearchResultMetaDataMessage">
            <summary>Sets the shim of Customer.GetSearchResultMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.MergeMessage">
            <summary>Sets the shim of Customer.Merge(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.RecentCustomersMessage">
            <summary>Sets the shim of Customer.RecentCustomers(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.RetrieveFavoriteCompaniesMessage">
            <summary>Sets the shim of Customer.RetrieveFavoriteCompanies(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.RetrieveFavoriteIndividualMessage">
            <summary>Sets the shim of Customer.RetrieveFavoriteIndividual(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.SearchForMobileStream">
            <summary>Sets the shim of Customer.SearchForMobile(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomer.SortbyNodeXmlDocumentString">
            <summary>Sets the shim of Customer.SortbyNode(XmlDocument xmlDoc, String columnName)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimCustomerManagement">
            <summary>Shim type of CmService.Service.CustomerManagement</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.#ctor(CmService.Service.CustomerManagement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimCustomerManagement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.AuthenticateUserMessage">
            <summary>Sets the shim of CustomerManagement.AuthenticateUser(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.ChangePasswordMessage">
            <summary>Sets the shim of CustomerManagement.ChangePassword(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.GetDefaultUserProfileMessage">
            <summary>Sets the shim of CustomerManagement.GetDefaultUserProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.GetLboMappingsMessage">
            <summary>Sets the shim of CustomerManagement.GetLboMappings(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.GetUserPreferenceByNameMessage">
            <summary>Sets the shim of CustomerManagement.GetUserPreferenceByName(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.GetUserProfileMessage">
            <summary>Sets the shim of CustomerManagement.GetUserProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.LogoutUserMessage">
            <summary>Sets the shim of CustomerManagement.LogoutUser(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIAnalyticsGetAnalyticsDetailMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IAnalytics.GetAnalyticsDetail(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIApplicationConfigurationBrowseNavigatorSearchEntitiesMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IApplicationConfiguration.BrowseNavigatorSearchEntities(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIApplicationConfigurationGetOnyxMobileConfigurationMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IApplicationConfiguration.GetOnyxMobileConfiguration(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIApplicationConfigurationGetOnyxMobileHomePageMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IApplicationConfiguration.GetOnyxMobileHomePage(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIApplicationConfigurationGetOnyxMobileUserLinksMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IApplicationConfiguration.GetOnyxMobileUserLinks(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIAppointmentSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IAppointment.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIAppointmentUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IAppointment.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIBatchUpdateBatchUpdateRecallDateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IBatchUpdate.BatchUpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIBatchUpdateBatchUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IBatchUpdate.BatchUpdate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIBatchUpdateGetBatchUpdatableFieldsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IBatchUpdate.GetBatchUpdatableFields(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICompanyGetCompanyByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.GetCompanyById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICompanyGetCompanyFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.GetCompanyFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICompanyGetCompanyLBOParameterMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.GetCompanyLBOParameter(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICompanyGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICompanyGetWatchListByUserIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICompanySaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICompanySearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICompanyUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICompanyWatchMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.Watch(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIConnectivityCheckServiceMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IConnectivity.CheckService(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIConnectivityGetAppSettingsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IConnectivity.GetAppSettings(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIConnectivityGetEntityMappingMobileMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IConnectivity.GetEntityMappingMobile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIConnectivityGetOgsInstanceDetailsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IConnectivity.GetOgsInstanceDetails(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIContactAddExternalContactStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IContact.AddExternalContact(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIContactAddInternalContactStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IContact.AddInternalContact(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIContactGetContactByOwnerMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IContact.GetContactByOwner(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIContactGetContactTypeByCategoryIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IContact.GetContactTypeByCategoryId(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIContactGetExternalContactByOwnerMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IContact.GetExternalContactByOwner(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIContactGetInternalContactByOwnerMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IContact.GetInternalContactByOwner(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIContactGetInternalContactUserListMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IContact.GetInternalContactUserList(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICustomEntityGetCustomEntityFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomEntity.GetCustomEntityFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICustomEntityGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomEntity.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICustomEntitySaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomEntity.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICustomerGetSearchDataLboMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomer.GetSearchDataLbo(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICustomerGetSearchMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomer.GetSearchMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICustomerGetSearchResultMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomer.GetSearchResultMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICustomerMergeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomer.Merge(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICustomerRecentCustomersMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomer.RecentCustomers(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICustomerRetrieveFavoriteCompaniesMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomer.RetrieveFavoriteCompanies(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICustomerRetrieveFavoriteIndividualMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomer.RetrieveFavoriteIndividual(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractICustomerSearchForMobileStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomer.SearchForMobile(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDetailListViewGetDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDetailListView.GetData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDetailListViewGetMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDetailListView.GetMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDetailViewGetDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDetailView.GetData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDetailViewGetMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDetailView.GetMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDetailViewSaveMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDetailView.Save(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDoMoreDoMoreCountMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.DoMoreCount(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDoMoreDoMoreNavigatorCountMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.DoMoreNavigatorCount(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDoMoreDoMoreNavigatorMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.DoMoreNavigator(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDoMorePerformActionStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.PerformAction(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDoMorePromptExecuteLBOStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.PromptExecuteLBO(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDoMorePromptRetrieveMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.PromptRetrieve(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDoMorePromptUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.PromptUpdate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDoMoreRetrieveBySecondaryIdStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.RetrieveBySecondaryId(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDoMoreSearchMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.Search(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetCampaignsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCampaigns(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetCompanyFamilyMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCompanyFamily(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetCompanyMarketSectorMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCompanyMarketSector(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetCompanySICCodeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCompanySICCode(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetCompanySourceMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCompanySource(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetCompanyStatusMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCompanyStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetCompanySubTypeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCompanySubType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetCompanyTypeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCompanyType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetCountriesMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCountries(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetCountryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCountry(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetCustomCacheMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCustomCache(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetDateOperatorMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetDateOperator(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetEmailSentMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetEmailSent(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetForecastProbabilityMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetForecastProbability(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetForecastStatusMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetForecastStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetGroupsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetGroups(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetIncidentCategoryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentCategory(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetIncidentPriorityMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentPriority(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetIncidentProductMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentProduct(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetIncidentResolutionCode1Message">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentResolutionCode1(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetIncidentResolutionCode2Message">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentResolutionCode2(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetIncidentResolutionCode3Message">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentResolutionCode3(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetIncidentResolutionCode4Message">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentResolutionCode4(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetIncidentSourceMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentSource(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetIncidentStatusMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetIncidentTypeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetIndividualDepartmentCodeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIndividualDepartmentCode(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetIndividualSourceMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIndividualSource(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetIndividualStatusMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIndividualStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetIndividualSubTypeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIndividualSubType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetIndividualTitleCodeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIndividualTitleCode(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetIndividualTypeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIndividualType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetKeywordsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetKeywords(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetOperatorMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetOperator(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetProductGroupsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetProductGroups(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetProductStatusMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetProductStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetProductsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetProducts(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetRecentKeywordsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetRecentKeywords(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetReferenceFieldMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetReferenceField(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetReferenceLookupMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetReferenceLookup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetReferenceParameterMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetReferenceParameter(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetRegionMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetRegion(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetResolvedUsersMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetResolvedUsers(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetResourcePermissionMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetResourcePermission(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetResultActionGroupMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetResultActionGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetResultActionItemMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetResultActionItem(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetScriptsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetScripts(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetStateMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetState(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetTaskCategoryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetTaskCategory(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetTaskPriorityMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetTaskPriority(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetTaskStatusMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetTaskStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetTaskTypeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetTaskType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetTrackingCodeTypesMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetTrackingCodeTypes(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetTrackingCodesMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetTrackingCodes(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetUserTreeForMobileMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetUserTreeForMobile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetUsersAndGroupsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetUsersAndGroups(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetUsersMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetUsers(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetWorkticketPriorityMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketPriority(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetWorkticketResolutionCode1Message">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketResolutionCode1(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetWorkticketResolutionCode2Message">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketResolutionCode2(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetWorkticketResolutionCode3Message">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketResolutionCode3(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetWorkticketResolutionCode4Message">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketResolutionCode4(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetWorkticketSeverityMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketSeverity(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetWorkticketSourceMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketSource(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetWorkticketStatusMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIDomainDataGetWorkticketTypeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIEmailSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IEmail.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIFileLinkFileDownloadMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IFileLink.FileDownload(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIFileLinkFileUploadStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IFileLink.FileUpload(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIFileLinkSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IFileLink.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIFileLinkSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IFileLink.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIForecastGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IForecast.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIForecastSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IForecast.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIForecastUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IForecast.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIGridActionMenuGetGamConfigurationMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IGridActionMenu.GetGamConfiguration(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIWorkNoteGetWorkNoteFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIWorkNote.GetWorkNoteFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIWorkNoteSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIWorkNote.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIncidentGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIncident.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIncidentGetIncidentFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIncident.GetIncidentFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIncidentGetIncidentProductDetailsByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIncident.GetIncidentProductDetailsById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIncidentGetRetrieveByTrackingCodeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIncident.GetRetrieveByTrackingCode(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIncidentRecentIncidentsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIncident.RecentIncidents(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIncidentSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIncident.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIndividualGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIndividualGetIndividualByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.GetIndividualById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIndividualGetIndividualFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.GetIndividualFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIndividualGetIndividualLBOParameterMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.GetIndividualLBOParameter(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIndividualGetWatchListByUserIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIndividualSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIndividualSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIndividualUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIIndividualWatchMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.Watch(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIMobileBookmarkCreateMobileBookMarkMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IMobileBookmark.CreateMobileBookMark(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIMobileBookmarkGetCountMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IMobileBookmark.GetCount(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIMobileBookmarkRemoveMobileBookMarkMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IMobileBookmark.RemoveMobileBookMark(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIMobileBookmarkRunQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IMobileBookmark.RunQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractINotificationManagerExecuteBusinessRuleXElement">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.INotificationManager.ExecuteBusinessRule(XElement message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractINotificationManagerGetEmailTemplateDataXElement">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.INotificationManager.GetEmailTemplateData(XElement message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractINotificationManagerGetSessionXElement">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.INotificationManager.GetSession(XElement message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIProductGetRetrieveByProductCodeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProduct.GetRetrieveByProductCode(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIProductSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProduct.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIProductUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProduct.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIProfileManagerBrowseDataGridProfileMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProfileManager.BrowseDataGridProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIProfileManagerBrowseSearchFilterProfileMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProfileManager.BrowseSearchFilterProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIProfileManagerGetAllUIResourcesMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProfileManager.GetAllUIResources(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIProfileManagerGetModulePrivilegeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProfileManager.GetModulePrivilege(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIProfileManagerRestoreDataGridProfileMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProfileManager.RestoreDataGridProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIProfileManagerRestoreSearchFilterProfileMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProfileManager.RestoreSearchFilterProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIProfileManagerUpdateDataGridProfileStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProfileManager.UpdateDataGridProfile(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIProfileManagerUpdateSearchFilterProfileStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProfileManager.UpdateSearchFilterProfile(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQASIntegrationGetQASAddressResponseMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQASIntegration.GetQASAddressResponse(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQASIntegrationGetQASEmailResponseMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQASIntegration.GetQASEmailResponse(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryBrowseBookmarkMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.BrowseBookmark(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryBrowseQueryDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.BrowseQueryData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryBrowseQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.BrowseQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryBrowseQueryTreeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.BrowseQueryTree(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryCreateBookMarkMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.CreateBookMark(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryCreateHomePageQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.CreateHomePageQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryCreateQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.CreateQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryDeleteQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.DeleteQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryGetHomePageConfigMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.GetHomePageConfig(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryGetHomePageQueriesByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.GetHomePageQueriesById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryGetHomePageQueriesMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.GetHomePageQueries(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryGetQueryResultsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.GetQueryResults(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryGroupCreateQueryGroupMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQueryGroup.CreateQueryGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryGroupDeleteQueryGroupMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQueryGroup.DeleteQueryGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryGroupGetQueryGroupsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQueryGroup.GetQueryGroups(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryGroupMoveQueryGroupMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQueryGroup.MoveQueryGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryGroupUpdateQueryGroupMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQueryGroup.UpdateQueryGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryHelperDeleteStagedDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQueryHelper.DeleteStagedData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryHelperGetQueryProfileMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQueryHelper.GetQueryProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryHelperGetQueryResultMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQueryHelper.GetQueryResult(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryMoveQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.MoveQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryRemoveBookMarkMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.RemoveBookMark(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryRemoveHomePageQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.RemoveHomePageQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryRenameQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.RenameQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQuerySaveALLQueryStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.SaveALLQuery(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQuerySaveHomePageConfigStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.SaveHomePageConfig(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryUpdatePostionForQueryStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.UpdatePostionForQuery(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryUpdateQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.UpdateQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQueryValidateMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.Validate(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIQuoteGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuote.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISalesOpportunityGetWatchListByUserIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesOpportunity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISalesOpportunitySearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesOpportunity.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISalesOpportunityUpdateRecallDateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesOpportunity.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISalesOpportunityUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesOpportunity.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISalesOpportunityWatchMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesOpportunity.Watch(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISalesTaskGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesTask.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISalesTaskGetTaskFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesTask.GetTaskFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISalesTaskSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesTask.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISalesTaskSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesTask.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISalesTaskUpdateRecallDateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesTask.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISalesTaskUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesTask.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIScriptSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IScript.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIScriptUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IScript.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIServiceRequestGetWatchListByUserIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceRequest.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIServiceRequestSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceRequest.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIServiceRequestUpdateRecallDateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceRequest.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIServiceRequestUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceRequest.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIServiceRequestWatchMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceRequest.Watch(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIServiceTaskGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceTask.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIServiceTaskGetTaskFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceTask.GetTaskFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIServiceTaskSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceTask.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIServiceTaskSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceTask.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIServiceTaskUpdateRecallDateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceTask.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIServiceTaskUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceTask.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISocialGetTweetMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISocial.GetTweet(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISubscribeNotificationCheckONSServiceMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.CheckONSService(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISubscribeNotificationDeleteSubscriptionMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.DeleteSubscription(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISubscribeNotificationGetAvailableNotificationMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.GetAvailableNotification(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISubscribeNotificationGetNotificationMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.GetNotification(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISubscribeNotificationGetSubscribedNotificationMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.GetSubscribedNotification(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISubscribeNotificationGetUsersMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.GetUsers(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISubscribeNotificationLBOPublisherStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.LBOPublisher(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISubscribeNotificationPublishGenericEventStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.PublishGenericEvent(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISubscribeNotificationPublishSubscriptionStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.PublishSubscription(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISubscribeNotificationSaveSubscriptionStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.SaveSubscription(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISubscribeNotificationUpdateSubscriptionStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.UpdateSubscription(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISupportIncidentGetWatchListByUserIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportIncident.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISupportIncidentSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportIncident.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISupportIncidentUpdateRecallDateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportIncident.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISupportIncidentUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportIncident.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISupportIncidentWatchMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportIncident.Watch(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISupportTaskGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportTask.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISupportTaskGetTaskFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportTask.GetTaskFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISupportTaskSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportTask.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISupportTaskSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportTask.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISupportTaskUpdateRecallDateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportTask.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractISupportTaskUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportTask.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractITaskGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ITask.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractITaskGetTaskFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ITask.GetTaskFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractITaskSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ITask.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractITaskSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ITask.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractITaskUpdateRecallDateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ITask.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractITaskUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ITask.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractITransactionExecuteMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ITransaction.Execute(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIWorkTicketAddLinkStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IWorkTicket.AddLink(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIWorkTicketGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IWorkTicket.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIWorkTicketGetWorkTicketFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IWorkTicket.GetWorkTicketFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIWorkTicketSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IWorkTicket.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIWorkTicketSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IWorkTicket.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AllInstances.OnyxGatewayContractIWorkTicketUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IWorkTicket.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.AuthenticateUserMessage">
            <summary>Sets the shim of CustomerManagement.AuthenticateUser(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IAnalytics)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IApplicationConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IAppointment)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IAuthenticate)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IBatchUpdate)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.ICompany)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IConnectivity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IContact)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.ICustomEntity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.ICustomer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IDetailListView)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IDetailView)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IDoMore)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IDomainData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IEmail)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IFileLink)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IForecast)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IGridActionMenu)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IIWorkNote)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IIncident)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IIndividual)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.ILboConfiguration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IMobileBookmark)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.INotificationManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IProduct)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IProfileManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IQASIntegration)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IQuery)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IQueryGroup)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IQueryHelper)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IQuote)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.ISalesOpportunity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.ISalesTask)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IScript)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IServiceRequest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IServiceTask)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.ISocial)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.ISubscribeNotification)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.ISupportIncident)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.ISupportTask)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.ITask)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.ITransaction)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(Onyx.GatewayContract.IWorkTicket)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(OnyxSDK.Public.OGSOEASContract.IOGSOEASOnyxAuthenticate)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(OnyxSDK.Public.OGSOEASContract.IOGSOEASOnyxAuthenticateNT)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(OnyxSDK.Public.OGSOEASContract.IOGSOEASOnyxDictionaryCacheProxy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(OnyxSDK.Public.OGSOEASContract.IOGSOEASOnyxEASServices)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(OnyxSDK.Public.OGSOEASContract.IOGSOEASOnyxNatLangProxy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(OnyxSDK.Public.OGSOEASContract.IOGSOEASOnyxSessionManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimCustomerManagement.Bind(OnyxSDK.Public.OGSOEASContract.IOGSOEASOnyxTransactionManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.ChangePasswordMessage">
            <summary>Sets the shim of CustomerManagement.ChangePassword(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.Constructor">
            <summary>Sets the shim of CustomerManagement.CustomerManagement()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.GetDefaultUserProfileMessage">
            <summary>Sets the shim of CustomerManagement.GetDefaultUserProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.GetLboMappingsMessage">
            <summary>Sets the shim of CustomerManagement.GetLboMappings(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.GetUserPreferenceByNameMessage">
            <summary>Sets the shim of CustomerManagement.GetUserPreferenceByName(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.GetUserProfileMessage">
            <summary>Sets the shim of CustomerManagement.GetUserProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.LogoutUserMessage">
            <summary>Sets the shim of CustomerManagement.LogoutUser(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIAnalyticsGetAnalyticsDetailMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IAnalytics.GetAnalyticsDetail(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIApplicationConfigurationBrowseNavigatorSearchEntitiesMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IApplicationConfiguration.BrowseNavigatorSearchEntities(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIApplicationConfigurationGetOnyxMobileConfigurationMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IApplicationConfiguration.GetOnyxMobileConfiguration(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIApplicationConfigurationGetOnyxMobileHomePageMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IApplicationConfiguration.GetOnyxMobileHomePage(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIApplicationConfigurationGetOnyxMobileUserLinksMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IApplicationConfiguration.GetOnyxMobileUserLinks(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIAppointmentSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IAppointment.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIAppointmentUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IAppointment.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIBatchUpdateBatchUpdateRecallDateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IBatchUpdate.BatchUpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIBatchUpdateBatchUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IBatchUpdate.BatchUpdate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIBatchUpdateGetBatchUpdatableFieldsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IBatchUpdate.GetBatchUpdatableFields(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICompanyGetCompanyByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.GetCompanyById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICompanyGetCompanyFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.GetCompanyFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICompanyGetCompanyLBOParameterMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.GetCompanyLBOParameter(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICompanyGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICompanyGetWatchListByUserIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICompanySaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICompanySearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICompanyUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICompanyWatchMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICompany.Watch(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIConnectivityCheckServiceMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IConnectivity.CheckService(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIConnectivityGetAppSettingsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IConnectivity.GetAppSettings(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIConnectivityGetEntityMappingMobileMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IConnectivity.GetEntityMappingMobile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIConnectivityGetOgsInstanceDetailsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IConnectivity.GetOgsInstanceDetails(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIContactAddExternalContactStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IContact.AddExternalContact(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIContactAddInternalContactStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IContact.AddInternalContact(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIContactGetContactByOwnerMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IContact.GetContactByOwner(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIContactGetContactTypeByCategoryIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IContact.GetContactTypeByCategoryId(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIContactGetExternalContactByOwnerMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IContact.GetExternalContactByOwner(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIContactGetInternalContactByOwnerMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IContact.GetInternalContactByOwner(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIContactGetInternalContactUserListMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IContact.GetInternalContactUserList(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICustomEntityGetCustomEntityFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomEntity.GetCustomEntityFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICustomEntityGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomEntity.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICustomEntitySaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomEntity.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICustomerGetSearchDataLboMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomer.GetSearchDataLbo(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICustomerGetSearchMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomer.GetSearchMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICustomerGetSearchResultMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomer.GetSearchResultMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICustomerMergeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomer.Merge(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICustomerRecentCustomersMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomer.RecentCustomers(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICustomerRetrieveFavoriteCompaniesMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomer.RetrieveFavoriteCompanies(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICustomerRetrieveFavoriteIndividualMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomer.RetrieveFavoriteIndividual(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractICustomerSearchForMobileStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ICustomer.SearchForMobile(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDetailListViewGetDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDetailListView.GetData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDetailListViewGetMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDetailListView.GetMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDetailViewGetDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDetailView.GetData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDetailViewGetMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDetailView.GetMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDetailViewSaveMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDetailView.Save(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDoMoreDoMoreCountMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.DoMoreCount(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDoMoreDoMoreNavigatorCountMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.DoMoreNavigatorCount(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDoMoreDoMoreNavigatorMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.DoMoreNavigator(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDoMorePerformActionStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.PerformAction(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDoMorePromptExecuteLBOStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.PromptExecuteLBO(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDoMorePromptRetrieveMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.PromptRetrieve(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDoMorePromptUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.PromptUpdate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDoMoreRetrieveBySecondaryIdStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.RetrieveBySecondaryId(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDoMoreSearchMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDoMore.Search(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetCampaignsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCampaigns(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetCompanyFamilyMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCompanyFamily(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetCompanyMarketSectorMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCompanyMarketSector(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetCompanySICCodeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCompanySICCode(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetCompanySourceMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCompanySource(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetCompanyStatusMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCompanyStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetCompanySubTypeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCompanySubType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetCompanyTypeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCompanyType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetCountriesMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCountries(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetCountryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCountry(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetCustomCacheMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetCustomCache(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetDateOperatorMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetDateOperator(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetEmailSentMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetEmailSent(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetForecastProbabilityMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetForecastProbability(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetForecastStatusMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetForecastStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetGroupsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetGroups(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetIncidentCategoryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentCategory(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetIncidentPriorityMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentPriority(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetIncidentProductMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentProduct(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetIncidentResolutionCode1Message">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentResolutionCode1(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetIncidentResolutionCode2Message">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentResolutionCode2(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetIncidentResolutionCode3Message">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentResolutionCode3(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetIncidentResolutionCode4Message">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentResolutionCode4(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetIncidentSourceMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentSource(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetIncidentStatusMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetIncidentTypeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIncidentType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetIndividualDepartmentCodeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIndividualDepartmentCode(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetIndividualSourceMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIndividualSource(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetIndividualStatusMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIndividualStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetIndividualSubTypeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIndividualSubType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetIndividualTitleCodeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIndividualTitleCode(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetIndividualTypeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetIndividualType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetKeywordsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetKeywords(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetOperatorMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetOperator(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetProductGroupsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetProductGroups(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetProductStatusMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetProductStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetProductsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetProducts(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetRecentKeywordsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetRecentKeywords(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetReferenceFieldMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetReferenceField(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetReferenceLookupMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetReferenceLookup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetReferenceParameterMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetReferenceParameter(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetRegionMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetRegion(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetResolvedUsersMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetResolvedUsers(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetResourcePermissionMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetResourcePermission(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetResultActionGroupMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetResultActionGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetResultActionItemMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetResultActionItem(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetScriptsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetScripts(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetStateMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetState(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetTaskCategoryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetTaskCategory(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetTaskPriorityMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetTaskPriority(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetTaskStatusMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetTaskStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetTaskTypeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetTaskType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetTrackingCodeTypesMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetTrackingCodeTypes(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetTrackingCodesMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetTrackingCodes(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetUserTreeForMobileMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetUserTreeForMobile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetUsersAndGroupsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetUsersAndGroups(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetUsersMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetUsers(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetWorkticketPriorityMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketPriority(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetWorkticketResolutionCode1Message">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketResolutionCode1(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetWorkticketResolutionCode2Message">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketResolutionCode2(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetWorkticketResolutionCode3Message">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketResolutionCode3(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetWorkticketResolutionCode4Message">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketResolutionCode4(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetWorkticketSeverityMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketSeverity(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetWorkticketSourceMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketSource(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetWorkticketStatusMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIDomainDataGetWorkticketTypeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IDomainData.GetWorkticketType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIEmailSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IEmail.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIFileLinkFileDownloadMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IFileLink.FileDownload(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIFileLinkFileUploadStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IFileLink.FileUpload(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIFileLinkSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IFileLink.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIFileLinkSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IFileLink.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIForecastGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IForecast.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIForecastSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IForecast.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIForecastUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IForecast.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIGridActionMenuGetGamConfigurationMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IGridActionMenu.GetGamConfiguration(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIWorkNoteGetWorkNoteFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIWorkNote.GetWorkNoteFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIWorkNoteSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIWorkNote.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIncidentGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIncident.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIncidentGetIncidentFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIncident.GetIncidentFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIncidentGetIncidentProductDetailsByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIncident.GetIncidentProductDetailsById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIncidentGetRetrieveByTrackingCodeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIncident.GetRetrieveByTrackingCode(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIncidentRecentIncidentsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIncident.RecentIncidents(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIncidentSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIncident.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIndividualGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIndividualGetIndividualByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.GetIndividualById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIndividualGetIndividualFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.GetIndividualFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIndividualGetIndividualLBOParameterMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.GetIndividualLBOParameter(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIndividualGetWatchListByUserIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIndividualSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIndividualSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIndividualUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIIndividualWatchMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IIndividual.Watch(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIMobileBookmarkCreateMobileBookMarkMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IMobileBookmark.CreateMobileBookMark(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIMobileBookmarkGetCountMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IMobileBookmark.GetCount(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIMobileBookmarkRemoveMobileBookMarkMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IMobileBookmark.RemoveMobileBookMark(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIMobileBookmarkRunQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IMobileBookmark.RunQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractINotificationManagerExecuteBusinessRuleXElement">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.INotificationManager.ExecuteBusinessRule(XElement message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractINotificationManagerGetEmailTemplateDataXElement">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.INotificationManager.GetEmailTemplateData(XElement message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractINotificationManagerGetSessionXElement">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.INotificationManager.GetSession(XElement message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIProductGetRetrieveByProductCodeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProduct.GetRetrieveByProductCode(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIProductSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProduct.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIProductUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProduct.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIProfileManagerBrowseDataGridProfileMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProfileManager.BrowseDataGridProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIProfileManagerBrowseSearchFilterProfileMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProfileManager.BrowseSearchFilterProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIProfileManagerGetAllUIResourcesMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProfileManager.GetAllUIResources(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIProfileManagerGetModulePrivilegeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProfileManager.GetModulePrivilege(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIProfileManagerRestoreDataGridProfileMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProfileManager.RestoreDataGridProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIProfileManagerRestoreSearchFilterProfileMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProfileManager.RestoreSearchFilterProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIProfileManagerUpdateDataGridProfileStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProfileManager.UpdateDataGridProfile(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIProfileManagerUpdateSearchFilterProfileStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IProfileManager.UpdateSearchFilterProfile(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQASIntegrationGetQASAddressResponseMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQASIntegration.GetQASAddressResponse(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQASIntegrationGetQASEmailResponseMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQASIntegration.GetQASEmailResponse(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryBrowseBookmarkMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.BrowseBookmark(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryBrowseQueryDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.BrowseQueryData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryBrowseQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.BrowseQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryBrowseQueryTreeMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.BrowseQueryTree(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryCreateBookMarkMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.CreateBookMark(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryCreateHomePageQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.CreateHomePageQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryCreateQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.CreateQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryDeleteQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.DeleteQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryGetHomePageConfigMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.GetHomePageConfig(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryGetHomePageQueriesByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.GetHomePageQueriesById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryGetHomePageQueriesMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.GetHomePageQueries(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryGetQueryResultsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.GetQueryResults(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryGroupCreateQueryGroupMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQueryGroup.CreateQueryGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryGroupDeleteQueryGroupMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQueryGroup.DeleteQueryGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryGroupGetQueryGroupsMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQueryGroup.GetQueryGroups(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryGroupMoveQueryGroupMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQueryGroup.MoveQueryGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryGroupUpdateQueryGroupMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQueryGroup.UpdateQueryGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryHelperDeleteStagedDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQueryHelper.DeleteStagedData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryHelperGetQueryProfileMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQueryHelper.GetQueryProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryHelperGetQueryResultMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQueryHelper.GetQueryResult(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryMoveQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.MoveQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryRemoveBookMarkMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.RemoveBookMark(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryRemoveHomePageQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.RemoveHomePageQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryRenameQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.RenameQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQuerySaveALLQueryStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.SaveALLQuery(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQuerySaveHomePageConfigStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.SaveHomePageConfig(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryUpdatePostionForQueryStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.UpdatePostionForQuery(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryUpdateQueryMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.UpdateQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQueryValidateMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuery.Validate(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIQuoteGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IQuote.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISalesOpportunityGetWatchListByUserIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesOpportunity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISalesOpportunitySearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesOpportunity.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISalesOpportunityUpdateRecallDateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesOpportunity.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISalesOpportunityUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesOpportunity.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISalesOpportunityWatchMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesOpportunity.Watch(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISalesTaskGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesTask.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISalesTaskGetTaskFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesTask.GetTaskFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISalesTaskSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesTask.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISalesTaskSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesTask.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISalesTaskUpdateRecallDateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesTask.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISalesTaskUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISalesTask.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIScriptSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IScript.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIScriptUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IScript.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIServiceRequestGetWatchListByUserIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceRequest.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIServiceRequestSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceRequest.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIServiceRequestUpdateRecallDateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceRequest.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIServiceRequestUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceRequest.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIServiceRequestWatchMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceRequest.Watch(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIServiceTaskGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceTask.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIServiceTaskGetTaskFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceTask.GetTaskFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIServiceTaskSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceTask.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIServiceTaskSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceTask.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIServiceTaskUpdateRecallDateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceTask.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIServiceTaskUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IServiceTask.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISocialGetTweetMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISocial.GetTweet(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISubscribeNotificationCheckONSServiceMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.CheckONSService(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISubscribeNotificationDeleteSubscriptionMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.DeleteSubscription(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISubscribeNotificationGetAvailableNotificationMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.GetAvailableNotification(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISubscribeNotificationGetNotificationMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.GetNotification(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISubscribeNotificationGetSubscribedNotificationMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.GetSubscribedNotification(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISubscribeNotificationGetUsersMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.GetUsers(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISubscribeNotificationLBOPublisherStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.LBOPublisher(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISubscribeNotificationPublishGenericEventStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.PublishGenericEvent(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISubscribeNotificationPublishSubscriptionStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.PublishSubscription(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISubscribeNotificationSaveSubscriptionStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.SaveSubscription(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISubscribeNotificationUpdateSubscriptionStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISubscribeNotification.UpdateSubscription(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISupportIncidentGetWatchListByUserIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportIncident.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISupportIncidentSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportIncident.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISupportIncidentUpdateRecallDateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportIncident.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISupportIncidentUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportIncident.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISupportIncidentWatchMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportIncident.Watch(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISupportTaskGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportTask.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISupportTaskGetTaskFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportTask.GetTaskFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISupportTaskSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportTask.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISupportTaskSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportTask.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISupportTaskUpdateRecallDateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportTask.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractISupportTaskUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ISupportTask.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractITaskGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ITask.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractITaskGetTaskFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ITask.GetTaskFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractITaskSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ITask.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractITaskSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ITask.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractITaskUpdateRecallDateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ITask.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractITaskUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ITask.Update(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractITransactionExecuteMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.ITransaction.Execute(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIWorkTicketAddLinkStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IWorkTicket.AddLink(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIWorkTicketGetDetailsViewByIdMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IWorkTicket.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIWorkTicketGetWorkTicketFieldMetaDataMessage">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IWorkTicket.GetWorkTicketFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIWorkTicketSaveStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IWorkTicket.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIWorkTicketSearchStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IWorkTicket.Search(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimCustomerManagement.OnyxGatewayContractIWorkTicketUpdateStream">
            <summary>Sets the shim of CustomerManagement.Onyx.GatewayContract.IWorkTicket.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimDetailView">
            <summary>Shim type of CmService.Service.DetailView</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimDetailView.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimDetailView.#ctor(CmService.Service.DetailView)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimDetailView.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDetailView.AllInstances.GetDataMessage">
            <summary>Sets the shim of DetailView.GetData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDetailView.AllInstances.GetMetaDataMessage">
            <summary>Sets the shim of DetailView.GetMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDetailView.AllInstances.SaveMessage">
            <summary>Sets the shim of DetailView.Save(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimDetailView.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimDetailView.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDetailView.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimDetailView.Bind(Onyx.GatewayContract.IDetailView)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDetailView.Constructor">
            <summary>Sets the shim of DetailView.DetailView()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDetailView.GetDataMessage">
            <summary>Sets the shim of DetailView.GetData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDetailView.GetMetaDataMessage">
            <summary>Sets the shim of DetailView.GetMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDetailView.SaveMessage">
            <summary>Sets the shim of DetailView.Save(Message message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimDomainData">
            <summary>Shim type of CmService.Service.DomainData</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimDomainData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimDomainData.#ctor(CmService.Service.DomainData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimDomainData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.CheckUIResourcePermissionStringHashtable">
            <summary>Sets the shim of DomainData.CheckUIResourcePermission(String xml, Hashtable parameterCollection)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetCampaignsMessage">
            <summary>Sets the shim of DomainData.GetCampaigns(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetCompanyFamilyMessage">
            <summary>Sets the shim of DomainData.GetCompanyFamily(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetCompanyMarketSectorMessage">
            <summary>Sets the shim of DomainData.GetCompanyMarketSector(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetCompanySICCodeMessage">
            <summary>Sets the shim of DomainData.GetCompanySICCode(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetCompanySourceMessage">
            <summary>Sets the shim of DomainData.GetCompanySource(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetCompanyStatusMessage">
            <summary>Sets the shim of DomainData.GetCompanyStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetCompanySubTypeMessage">
            <summary>Sets the shim of DomainData.GetCompanySubType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetCompanyTypeMessage">
            <summary>Sets the shim of DomainData.GetCompanyType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetCountriesMessage">
            <summary>Sets the shim of DomainData.GetCountries(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetCountryMessage">
            <summary>Sets the shim of DomainData.GetCountry(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetCustomCacheMessage">
            <summary>Sets the shim of DomainData.GetCustomCache(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetDateOperatorMessage">
            <summary>Sets the shim of DomainData.GetDateOperator(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetEmailSentMessage">
            <summary>Sets the shim of DomainData.GetEmailSent(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetForecastProbabilityMessage">
            <summary>Sets the shim of DomainData.GetForecastProbability(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetForecastStatusMessage">
            <summary>Sets the shim of DomainData.GetForecastStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetGroupsMessage">
            <summary>Sets the shim of DomainData.GetGroups(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetIncidentCategoryMessage">
            <summary>Sets the shim of DomainData.GetIncidentCategory(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetIncidentPriorityMessage">
            <summary>Sets the shim of DomainData.GetIncidentPriority(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetIncidentProductMessage">
            <summary>Sets the shim of DomainData.GetIncidentProduct(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetIncidentResolutionCode1Message">
            <summary>Sets the shim of DomainData.GetIncidentResolutionCode1(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetIncidentResolutionCode2Message">
            <summary>Sets the shim of DomainData.GetIncidentResolutionCode2(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetIncidentResolutionCode3Message">
            <summary>Sets the shim of DomainData.GetIncidentResolutionCode3(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetIncidentResolutionCode4Message">
            <summary>Sets the shim of DomainData.GetIncidentResolutionCode4(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetIncidentSourceMessage">
            <summary>Sets the shim of DomainData.GetIncidentSource(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetIncidentStatusMessage">
            <summary>Sets the shim of DomainData.GetIncidentStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetIncidentTypeMessage">
            <summary>Sets the shim of DomainData.GetIncidentType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetIndividualDepartmentCodeMessage">
            <summary>Sets the shim of DomainData.GetIndividualDepartmentCode(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetIndividualSourceMessage">
            <summary>Sets the shim of DomainData.GetIndividualSource(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetIndividualStatusMessage">
            <summary>Sets the shim of DomainData.GetIndividualStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetIndividualSubTypeMessage">
            <summary>Sets the shim of DomainData.GetIndividualSubType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetIndividualTitleCodeMessage">
            <summary>Sets the shim of DomainData.GetIndividualTitleCode(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetIndividualTypeMessage">
            <summary>Sets the shim of DomainData.GetIndividualType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetKeywordsMessage">
            <summary>Sets the shim of DomainData.GetKeywords(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetOperatorMessage">
            <summary>Sets the shim of DomainData.GetOperator(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetProductGroupsMessage">
            <summary>Sets the shim of DomainData.GetProductGroups(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetProductStatusMessage">
            <summary>Sets the shim of DomainData.GetProductStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetProductsMessage">
            <summary>Sets the shim of DomainData.GetProducts(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetRecentKeywordsMessage">
            <summary>Sets the shim of DomainData.GetRecentKeywords(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetReferenceFieldMessage">
            <summary>Sets the shim of DomainData.GetReferenceField(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetReferenceLookupMessage">
            <summary>Sets the shim of DomainData.GetReferenceLookup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetReferenceParameterMessage">
            <summary>Sets the shim of DomainData.GetReferenceParameter(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetRegionMessage">
            <summary>Sets the shim of DomainData.GetRegion(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetResolvedUsersMessage">
            <summary>Sets the shim of DomainData.GetResolvedUsers(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetResourcePermissionMessage">
            <summary>Sets the shim of DomainData.GetResourcePermission(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetResultActionGroupMessage">
            <summary>Sets the shim of DomainData.GetResultActionGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetResultActionItemMessage">
            <summary>Sets the shim of DomainData.GetResultActionItem(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetScriptsMessage">
            <summary>Sets the shim of DomainData.GetScripts(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetStateMessage">
            <summary>Sets the shim of DomainData.GetState(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetTaskCategoryMessage">
            <summary>Sets the shim of DomainData.GetTaskCategory(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetTaskPriorityMessage">
            <summary>Sets the shim of DomainData.GetTaskPriority(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetTaskStatusMessage">
            <summary>Sets the shim of DomainData.GetTaskStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetTaskTypeMessage">
            <summary>Sets the shim of DomainData.GetTaskType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetTrackingCodeTypesMessage">
            <summary>Sets the shim of DomainData.GetTrackingCodeTypes(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetTrackingCodesMessage">
            <summary>Sets the shim of DomainData.GetTrackingCodes(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetUserTreeForMobileMessage">
            <summary>Sets the shim of DomainData.GetUserTreeForMobile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetUsersAndGroupsMessage">
            <summary>Sets the shim of DomainData.GetUsersAndGroups(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetUsersMessage">
            <summary>Sets the shim of DomainData.GetUsers(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetWorkticketPriorityMessage">
            <summary>Sets the shim of DomainData.GetWorkticketPriority(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetWorkticketResolutionCode1Message">
            <summary>Sets the shim of DomainData.GetWorkticketResolutionCode1(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetWorkticketResolutionCode2Message">
            <summary>Sets the shim of DomainData.GetWorkticketResolutionCode2(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetWorkticketResolutionCode3Message">
            <summary>Sets the shim of DomainData.GetWorkticketResolutionCode3(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetWorkticketResolutionCode4Message">
            <summary>Sets the shim of DomainData.GetWorkticketResolutionCode4(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetWorkticketSeverityMessage">
            <summary>Sets the shim of DomainData.GetWorkticketSeverity(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetWorkticketSourceMessage">
            <summary>Sets the shim of DomainData.GetWorkticketSource(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetWorkticketStatusMessage">
            <summary>Sets the shim of DomainData.GetWorkticketStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.AllInstances.GetWorkticketTypeMessage">
            <summary>Sets the shim of DomainData.GetWorkticketType(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimDomainData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimDomainData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimDomainData.Bind(Onyx.GatewayContract.IDomainData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.CheckUIResourcePermissionStringHashtable">
            <summary>Sets the shim of DomainData.CheckUIResourcePermission(String xml, Hashtable parameterCollection)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.Constructor">
            <summary>Sets the shim of DomainData.DomainData()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetCampaignsMessage">
            <summary>Sets the shim of DomainData.GetCampaigns(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetCompanyFamilyMessage">
            <summary>Sets the shim of DomainData.GetCompanyFamily(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetCompanyMarketSectorMessage">
            <summary>Sets the shim of DomainData.GetCompanyMarketSector(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetCompanySICCodeMessage">
            <summary>Sets the shim of DomainData.GetCompanySICCode(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetCompanySourceMessage">
            <summary>Sets the shim of DomainData.GetCompanySource(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetCompanyStatusMessage">
            <summary>Sets the shim of DomainData.GetCompanyStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetCompanySubTypeMessage">
            <summary>Sets the shim of DomainData.GetCompanySubType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetCompanyTypeMessage">
            <summary>Sets the shim of DomainData.GetCompanyType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetCountriesMessage">
            <summary>Sets the shim of DomainData.GetCountries(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetCountryMessage">
            <summary>Sets the shim of DomainData.GetCountry(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetCustomCacheMessage">
            <summary>Sets the shim of DomainData.GetCustomCache(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetDateOperatorMessage">
            <summary>Sets the shim of DomainData.GetDateOperator(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetEmailSentMessage">
            <summary>Sets the shim of DomainData.GetEmailSent(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetForecastProbabilityMessage">
            <summary>Sets the shim of DomainData.GetForecastProbability(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetForecastStatusMessage">
            <summary>Sets the shim of DomainData.GetForecastStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetGroupsMessage">
            <summary>Sets the shim of DomainData.GetGroups(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetIncidentCategoryMessage">
            <summary>Sets the shim of DomainData.GetIncidentCategory(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetIncidentPriorityMessage">
            <summary>Sets the shim of DomainData.GetIncidentPriority(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetIncidentProductMessage">
            <summary>Sets the shim of DomainData.GetIncidentProduct(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetIncidentResolutionCode1Message">
            <summary>Sets the shim of DomainData.GetIncidentResolutionCode1(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetIncidentResolutionCode2Message">
            <summary>Sets the shim of DomainData.GetIncidentResolutionCode2(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetIncidentResolutionCode3Message">
            <summary>Sets the shim of DomainData.GetIncidentResolutionCode3(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetIncidentResolutionCode4Message">
            <summary>Sets the shim of DomainData.GetIncidentResolutionCode4(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetIncidentSourceMessage">
            <summary>Sets the shim of DomainData.GetIncidentSource(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetIncidentStatusMessage">
            <summary>Sets the shim of DomainData.GetIncidentStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetIncidentTypeMessage">
            <summary>Sets the shim of DomainData.GetIncidentType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetIndividualDepartmentCodeMessage">
            <summary>Sets the shim of DomainData.GetIndividualDepartmentCode(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetIndividualSourceMessage">
            <summary>Sets the shim of DomainData.GetIndividualSource(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetIndividualStatusMessage">
            <summary>Sets the shim of DomainData.GetIndividualStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetIndividualSubTypeMessage">
            <summary>Sets the shim of DomainData.GetIndividualSubType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetIndividualTitleCodeMessage">
            <summary>Sets the shim of DomainData.GetIndividualTitleCode(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetIndividualTypeMessage">
            <summary>Sets the shim of DomainData.GetIndividualType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetKeywordsMessage">
            <summary>Sets the shim of DomainData.GetKeywords(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetOperatorMessage">
            <summary>Sets the shim of DomainData.GetOperator(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetProductGroupsMessage">
            <summary>Sets the shim of DomainData.GetProductGroups(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetProductStatusMessage">
            <summary>Sets the shim of DomainData.GetProductStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetProductsMessage">
            <summary>Sets the shim of DomainData.GetProducts(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetRecentKeywordsMessage">
            <summary>Sets the shim of DomainData.GetRecentKeywords(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetReferenceFieldMessage">
            <summary>Sets the shim of DomainData.GetReferenceField(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetReferenceLookupMessage">
            <summary>Sets the shim of DomainData.GetReferenceLookup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetReferenceParameterMessage">
            <summary>Sets the shim of DomainData.GetReferenceParameter(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetRegionMessage">
            <summary>Sets the shim of DomainData.GetRegion(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetResolvedUsersMessage">
            <summary>Sets the shim of DomainData.GetResolvedUsers(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetResourcePermissionMessage">
            <summary>Sets the shim of DomainData.GetResourcePermission(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetResultActionGroupMessage">
            <summary>Sets the shim of DomainData.GetResultActionGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetResultActionItemMessage">
            <summary>Sets the shim of DomainData.GetResultActionItem(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetScriptsMessage">
            <summary>Sets the shim of DomainData.GetScripts(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetStateMessage">
            <summary>Sets the shim of DomainData.GetState(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetTaskCategoryMessage">
            <summary>Sets the shim of DomainData.GetTaskCategory(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetTaskPriorityMessage">
            <summary>Sets the shim of DomainData.GetTaskPriority(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetTaskStatusMessage">
            <summary>Sets the shim of DomainData.GetTaskStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetTaskTypeMessage">
            <summary>Sets the shim of DomainData.GetTaskType(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetTrackingCodeTypesMessage">
            <summary>Sets the shim of DomainData.GetTrackingCodeTypes(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetTrackingCodesMessage">
            <summary>Sets the shim of DomainData.GetTrackingCodes(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetUserTreeForMobileMessage">
            <summary>Sets the shim of DomainData.GetUserTreeForMobile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetUsersAndGroupsMessage">
            <summary>Sets the shim of DomainData.GetUsersAndGroups(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetUsersMessage">
            <summary>Sets the shim of DomainData.GetUsers(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetWorkticketPriorityMessage">
            <summary>Sets the shim of DomainData.GetWorkticketPriority(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetWorkticketResolutionCode1Message">
            <summary>Sets the shim of DomainData.GetWorkticketResolutionCode1(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetWorkticketResolutionCode2Message">
            <summary>Sets the shim of DomainData.GetWorkticketResolutionCode2(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetWorkticketResolutionCode3Message">
            <summary>Sets the shim of DomainData.GetWorkticketResolutionCode3(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetWorkticketResolutionCode4Message">
            <summary>Sets the shim of DomainData.GetWorkticketResolutionCode4(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetWorkticketSeverityMessage">
            <summary>Sets the shim of DomainData.GetWorkticketSeverity(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetWorkticketSourceMessage">
            <summary>Sets the shim of DomainData.GetWorkticketSource(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetWorkticketStatusMessage">
            <summary>Sets the shim of DomainData.GetWorkticketStatus(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimDomainData.GetWorkticketTypeMessage">
            <summary>Sets the shim of DomainData.GetWorkticketType(Message message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimEmail">
            <summary>Shim type of CmService.Service.Email</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimEmail.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimEmail.#ctor(CmService.Service.Email)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimEmail.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimEmail.AllInstances.EntityNameGet">
            <summary>Sets the shim of Email.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimEmail.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimEmail.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimEmail.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimEmail.Bind(Onyx.GatewayContract.IEmail)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimEmail.Constructor">
            <summary>Sets the shim of Email.Email()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimEmail.EntityNameGet">
            <summary>Sets the shim of Email.get_EntityName()</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimErrors">
            <summary>Shim type of CmService.Service.Errors</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimErrors.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimErrors.#ctor(CmService.Service.Errors)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimErrors.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimErrors.AllInstances.ErrorGet">
            <summary>Sets the shim of Errors.get_Error()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimErrors.AllInstances.ErrorSetListOfObject">
            <summary>Sets the shim of Errors.set_Error(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimErrors.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimErrors.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimErrors.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimErrors.Constructor">
            <summary>Sets the shim of Errors.Errors()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimErrors.ErrorGet">
            <summary>Sets the shim of Errors.get_Error()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimErrors.ErrorSetListOfObject">
            <summary>Sets the shim of Errors.set_Error(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimFileLink">
            <summary>Shim type of CmService.Service.FileLink</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimFileLink.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimFileLink.#ctor(CmService.Service.FileLink)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimFileLink.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimFileLink.AllInstances.EntityNameGet">
            <summary>Sets the shim of FileLink.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimFileLink.AllInstances.FileDownloadMessage">
            <summary>Sets the shim of FileLink.FileDownload(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimFileLink.AllInstances.FileUploadStream">
            <summary>Sets the shim of FileLink.FileUpload(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimFileLink.AllInstances.SaveStream">
            <summary>Sets the shim of FileLink.Save(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimFileLink.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimFileLink.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimFileLink.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimFileLink.Bind(Onyx.GatewayContract.IFileLink)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimFileLink.Constructor">
            <summary>Sets the shim of FileLink.FileLink()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimFileLink.EntityNameGet">
            <summary>Sets the shim of FileLink.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimFileLink.FileDownloadMessage">
            <summary>Sets the shim of FileLink.FileDownload(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimFileLink.FileUploadStream">
            <summary>Sets the shim of FileLink.FileUpload(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimFileLink.SaveStream">
            <summary>Sets the shim of FileLink.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimFileLink.SerializeToStreamByteArray">
            <summary>Sets the shim of FileLink.SerializeToStream(Byte[] byteimage)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimForecast">
            <summary>Shim type of CmService.Service.Forecast</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimForecast.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimForecast.#ctor(CmService.Service.Forecast)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimForecast.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimForecast.AllInstances.EntityNameGet">
            <summary>Sets the shim of Forecast.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimForecast.AllInstances.GetDetailsViewByIdMessage">
            <summary>Sets the shim of Forecast.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimForecast.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimForecast.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimForecast.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimForecast.Bind(Onyx.GatewayContract.IForecast)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimForecast.Constructor">
            <summary>Sets the shim of Forecast.Forecast()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimForecast.EntityNameGet">
            <summary>Sets the shim of Forecast.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimForecast.GetDetailsViewByIdMessage">
            <summary>Sets the shim of Forecast.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimGridActionMenu">
            <summary>Shim type of CmService.Service.GridActionMenu</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimGridActionMenu.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimGridActionMenu.#ctor(CmService.Service.GridActionMenu)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimGridActionMenu.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimGridActionMenu.AllInstances.GetGamConfigurationMessage">
            <summary>Sets the shim of GridActionMenu.GetGamConfiguration(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimGridActionMenu.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimGridActionMenu.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimGridActionMenu.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimGridActionMenu.Bind(Onyx.GatewayContract.IGridActionMenu)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimGridActionMenu.Constructor">
            <summary>Sets the shim of GridActionMenu.GridActionMenu()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimGridActionMenu.GetGamConfigurationMessage">
            <summary>Sets the shim of GridActionMenu.GetGamConfiguration(Message message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimGroup">
            <summary>Shim type of CmService.Service.Group</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimGroup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimGroup.#ctor(CmService.Service.Group)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimGroup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimGroup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimGroup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimGroup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimGroup.Constructor">
            <summary>Sets the shim of Group.Group()</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimHelperMethod">
            <summary>Shim type of CmService.Service.HelperMethod</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimHelperMethod.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimHelperMethod.#ctor(CmService.Service.HelperMethod)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimHelperMethod.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimHelperMethod.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimHelperMethod.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimHelperMethod.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimHelperMethod.Constructor">
            <summary>Sets the shim of HelperMethod.HelperMethod()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimHelperMethod.DataXmlToObjectXmlNodeBoolean">
            <summary>Sets the shim of HelperMethod.DataXmlToObject(XmlNode xmlDocument, Boolean isAttributeHasData)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimHelperMethod.ErrorXmlToObjectXmlDocument">
            <summary>Sets the shim of HelperMethod.ErrorXmlToObject(XmlDocument xmlDocument)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimHelperMethod.GetPropertyStringObject">
            <summary>Sets the shim of HelperMethod.GetProperty(String propertyName, Object sourceObject)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimHelperMethod.GetPropertyValueStringObject">
            <summary>Sets the shim of HelperMethod.GetPropertyValue(String propertyName, Object sourceObject)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimHelperMethod.IsPropertyPresentStringObject">
            <summary>Sets the shim of HelperMethod.IsPropertyPresent(String propertyName, Object sourceObject)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimHelperMethod.PopulateXmlDataToObjectStringXmlNodeBoolean">
            <summary>Sets the shim of HelperMethod.PopulateXmlDataToObject(String className, XmlNode rootNode, Boolean isAttributeHasData)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimHelperMethod.QueryXmlToObjectXmlNodeBoolean">
            <summary>Sets the shim of HelperMethod.QueryXmlToObject(XmlNode xmlDocument, Boolean isAttributeHasData)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimHelperMethod.ResultXmlToObjectXmlDocument">
            <summary>Sets the shim of HelperMethod.ResultXmlToObject(XmlDocument xmlDocument)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimHelperMethod.SetPropertyValuePropertyInfoObjectObject">
            <summary>Sets the shim of HelperMethod.SetPropertyValue(PropertyInfo propertyInfo, Object dataSource, Object data)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimHelperMethod.SetPropertyValueStringObjectObject">
            <summary>Sets the shim of HelperMethod.SetPropertyValue(String propertyName, Object sourceObject, Object setValue)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimHelperMethod.XmlToObjectXmlDocument">
            <summary>Sets the shim of HelperMethod.XmlToObject(XmlDocument xmlDocument)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimIndividual">
            <summary>Shim type of CmService.Service.Individual</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimIndividual.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimIndividual.#ctor(CmService.Service.Individual)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimIndividual.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimIndividual.AllInstances.EntityNameGet">
            <summary>Sets the shim of Individual.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimIndividual.AllInstances.GetDetailsViewByIdMessage">
            <summary>Sets the shim of Individual.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimIndividual.AllInstances.GetIndividualByIdMessage">
            <summary>Sets the shim of Individual.GetIndividualById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimIndividual.AllInstances.GetIndividualFieldMetaDataMessage">
            <summary>Sets the shim of Individual.GetIndividualFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimIndividual.AllInstances.GetIndividualLBOParameterMessage">
            <summary>Sets the shim of Individual.GetIndividualLBOParameter(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimIndividual.AllInstances.SaveStream">
            <summary>Sets the shim of Individual.Save(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimIndividual.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimIndividual.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimIndividual.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimIndividual.Bind(Onyx.GatewayContract.IIndividual)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimIndividual.Constructor">
            <summary>Sets the shim of Individual.Individual()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimIndividual.EntityNameGet">
            <summary>Sets the shim of Individual.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimIndividual.GetDetailsViewByIdMessage">
            <summary>Sets the shim of Individual.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimIndividual.GetIndividualByIdMessage">
            <summary>Sets the shim of Individual.GetIndividualById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimIndividual.GetIndividualFieldMetaDataMessage">
            <summary>Sets the shim of Individual.GetIndividualFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimIndividual.GetIndividualLBOParameterMessage">
            <summary>Sets the shim of Individual.GetIndividualLBOParameter(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimIndividual.SaveStream">
            <summary>Sets the shim of Individual.Save(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimItem">
            <summary>Shim type of CmService.Service.Item</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimItem.#ctor(CmService.Service.Item)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimItem.Constructor">
            <summary>Sets the shim of Item.Item()</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimJsonOutput">
            <summary>Shim type of CmService.Service.JsonOutput</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimJsonOutput.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimJsonOutput.#ctor(CmService.Service.JsonOutput)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimJsonOutput.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimJsonOutput.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimJsonOutput.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimJsonOutput.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimJsonOutput.Constructor">
            <summary>Sets the shim of JsonOutput.JsonOutput()</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimJsonWriter">
            <summary>Shim type of CmService.Service.JsonWriter</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimJsonWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimJsonWriter.#ctor(CmService.Service.JsonWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimJsonWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimJsonWriter.AllInstances.OnWriteBodyContentsXmlDictionaryWriter">
            <summary>Sets the shim of JsonWriter.OnWriteBodyContents(XmlDictionaryWriter writer)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimJsonWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimJsonWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimJsonWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimJsonWriter.ConstructorStringString">
            <summary>Sets the shim of JsonWriter.JsonWriter(String message, String rootNode)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimJsonWriter.OnWriteBodyContentsXmlDictionaryWriter">
            <summary>Sets the shim of JsonWriter.OnWriteBodyContents(XmlDictionaryWriter writer)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimNotificationManager">
            <summary>Shim type of CmService.Service.NotificationManager</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimNotificationManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimNotificationManager.#ctor(CmService.Service.NotificationManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimNotificationManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimNotificationManager.AllInstances.ExecuteBusinessRuleXElement">
            <summary>Sets the shim of NotificationManager.ExecuteBusinessRule(XElement message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimNotificationManager.AllInstances.GetEmailTemplateDataXElement">
            <summary>Sets the shim of NotificationManager.GetEmailTemplateData(XElement message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimNotificationManager.AllInstances.GetSessionXElement">
            <summary>Sets the shim of NotificationManager.GetSession(XElement message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimNotificationManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimNotificationManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimNotificationManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimNotificationManager.Bind(Onyx.GatewayContract.INotificationManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimNotificationManager.Constructor">
            <summary>Sets the shim of NotificationManager.NotificationManager()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimNotificationManager.ExecuteBusinessRuleXElement">
            <summary>Sets the shim of NotificationManager.ExecuteBusinessRule(XElement message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimNotificationManager.GetEmailTemplateDataXElement">
            <summary>Sets the shim of NotificationManager.GetEmailTemplateData(XElement message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimNotificationManager.GetSessionXElement">
            <summary>Sets the shim of NotificationManager.GetSession(XElement message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimOperationProperties">
            <summary>Shim type of CmService.Service.OperationProperties</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimOperationProperties.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimOperationProperties.#ctor(CmService.Service.OperationProperties)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimOperationProperties.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimOperationProperties.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimOperationProperties.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimOperationProperties.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimOperationProperties.Constructor">
            <summary>Sets the shim of OperationProperties.OperationProperties()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimOperationProperties.GetPropertiesStringString">
            <summary>Sets the shim of OperationProperties.GetProperties(String resourceKey, String methodName)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimOperators">
            <summary>Shim type of CmService.Service.Operators</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimOperators.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimOperators.#ctor(CmService.Service.Operators)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimOperators.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimOperators.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimOperators.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimOperators.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimOperators.Constructor">
            <summary>Sets the shim of Operators.Operators()</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimParametersReturn">
            <summary>Shim type of CmService.Service.ParametersReturn</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimParametersReturn.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimParametersReturn.#ctor(CmService.Service.ParametersReturn)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimParametersReturn.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimParametersReturn.AllInstances.RowSetGet">
            <summary>Sets the shim of ParametersReturn.get_RowSet()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimParametersReturn.AllInstances.RowSetSetRowSet">
            <summary>Sets the shim of ParametersReturn.set_RowSet(RowSet value)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimParametersReturn.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimParametersReturn.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimParametersReturn.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimParametersReturn.Constructor">
            <summary>Sets the shim of ParametersReturn.ParametersReturn()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimParametersReturn.RowSetGet">
            <summary>Sets the shim of ParametersReturn.get_RowSet()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimParametersReturn.RowSetSetRowSet">
            <summary>Sets the shim of ParametersReturn.set_RowSet(RowSet value)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimProduct">
            <summary>Shim type of CmService.Service.Product</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimProduct.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimProduct.#ctor(CmService.Service.Product)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimProduct.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProduct.AllInstances.EntityNameGet">
            <summary>Sets the shim of Product.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProduct.AllInstances.GetRetrieveByProductCodeMessage">
            <summary>Sets the shim of Product.GetRetrieveByProductCode(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimProduct.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimProduct.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProduct.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimProduct.Bind(Onyx.GatewayContract.IProduct)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProduct.Constructor">
            <summary>Sets the shim of Product.Product()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProduct.EntityNameGet">
            <summary>Sets the shim of Product.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProduct.GetRetrieveByProductCodeMessage">
            <summary>Sets the shim of Product.GetRetrieveByProductCode(Message message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimProfileManager">
            <summary>Shim type of CmService.Service.ProfileManager</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimProfileManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimProfileManager.#ctor(CmService.Service.ProfileManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimProfileManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.AllInstances.BrowseDataGridProfileMessage">
            <summary>Sets the shim of ProfileManager.BrowseDataGridProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.AllInstances.BrowseSearchFilterProfileMessage">
            <summary>Sets the shim of ProfileManager.BrowseSearchFilterProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.AllInstances.GetAllUIResourcesMessage">
            <summary>Sets the shim of ProfileManager.GetAllUIResources(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.AllInstances.GetModulePrivilegeMessage">
            <summary>Sets the shim of ProfileManager.GetModulePrivilege(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.AllInstances.RestoreDataGridProfileMessage">
            <summary>Sets the shim of ProfileManager.RestoreDataGridProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.AllInstances.RestoreSearchFilterProfileMessage">
            <summary>Sets the shim of ProfileManager.RestoreSearchFilterProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.AllInstances.UpdateDataGridProfileStream">
            <summary>Sets the shim of ProfileManager.UpdateDataGridProfile(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.AllInstances.UpdateSearchFilterProfileStream">
            <summary>Sets the shim of ProfileManager.UpdateSearchFilterProfile(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.AllInstances.ValidateMaxRecordsProfileStream">
            <summary>Sets the shim of ProfileManager.ValidateMaxRecordsProfile(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimProfileManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimProfileManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimProfileManager.Bind(Onyx.GatewayContract.IProfileManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.BrowseDataGridProfileMessage">
            <summary>Sets the shim of ProfileManager.BrowseDataGridProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.BrowseSearchFilterProfileMessage">
            <summary>Sets the shim of ProfileManager.BrowseSearchFilterProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.Constructor">
            <summary>Sets the shim of ProfileManager.ProfileManager()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.GetAllUIResourcesMessage">
            <summary>Sets the shim of ProfileManager.GetAllUIResources(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.GetModulePrivilegeMessage">
            <summary>Sets the shim of ProfileManager.GetModulePrivilege(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.RestoreDataGridProfileMessage">
            <summary>Sets the shim of ProfileManager.RestoreDataGridProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.RestoreSearchFilterProfileMessage">
            <summary>Sets the shim of ProfileManager.RestoreSearchFilterProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.UpdateDataGridProfileStream">
            <summary>Sets the shim of ProfileManager.UpdateDataGridProfile(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.UpdateSearchFilterProfileStream">
            <summary>Sets the shim of ProfileManager.UpdateSearchFilterProfile(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimProfileManager.ValidateMaxRecordsProfileStream">
            <summary>Sets the shim of ProfileManager.ValidateMaxRecordsProfile(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimQueries">
            <summary>Shim type of CmService.Service.Queries</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQueries.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQueries.#ctor(CmService.Service.Queries)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimQueries.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQueries.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQueries.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueries.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueries.Constructor">
            <summary>Sets the shim of Queries.Queries()</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimQuery">
            <summary>Shim type of CmService.Service.Query</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQuery.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQuery.#ctor(CmService.Service.Query)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimQuery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.BrowseBookmarkMessage">
            <summary>Sets the shim of Query.BrowseBookmark(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.BrowseQueryDataMessage">
            <summary>Sets the shim of Query.BrowseQueryData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.BrowseQueryMessage">
            <summary>Sets the shim of Query.BrowseQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.BrowseQueryTreeMessage">
            <summary>Sets the shim of Query.BrowseQueryTree(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.CreateBookMarkMessage">
            <summary>Sets the shim of Query.CreateBookMark(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.CreateHomePageQueryMessage">
            <summary>Sets the shim of Query.CreateHomePageQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.CreateQueryMessage">
            <summary>Sets the shim of Query.CreateQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.DeleteQueryMessage">
            <summary>Sets the shim of Query.DeleteQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.GetHomePageConfigMessage">
            <summary>Sets the shim of Query.GetHomePageConfig(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.GetHomePageQueriesByIdMessage">
            <summary>Sets the shim of Query.GetHomePageQueriesById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.GetHomePageQueriesMessage">
            <summary>Sets the shim of Query.GetHomePageQueries(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.GetQueryResultsMessage">
            <summary>Sets the shim of Query.GetQueryResults(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.MoveQueryMessage">
            <summary>Sets the shim of Query.MoveQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.RemoveBookMarkMessage">
            <summary>Sets the shim of Query.RemoveBookMark(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.RemoveHomePageQueryMessage">
            <summary>Sets the shim of Query.RemoveHomePageQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.RenameQueryMessage">
            <summary>Sets the shim of Query.RenameQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.SaveALLQueryStream">
            <summary>Sets the shim of Query.SaveALLQuery(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.SaveHomePageConfigStream">
            <summary>Sets the shim of Query.SaveHomePageConfig(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.UpdatePostionForQueryStream">
            <summary>Sets the shim of Query.UpdatePostionForQuery(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.UpdateQueryMessage">
            <summary>Sets the shim of Query.UpdateQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.AllInstances.ValidateMessage">
            <summary>Sets the shim of Query.Validate(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQuery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQuery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQuery.Bind(Onyx.GatewayContract.IQuery)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.BrowseBookmarkMessage">
            <summary>Sets the shim of Query.BrowseBookmark(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.BrowseQueryDataMessage">
            <summary>Sets the shim of Query.BrowseQueryData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.BrowseQueryMessage">
            <summary>Sets the shim of Query.BrowseQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.BrowseQueryTreeMessage">
            <summary>Sets the shim of Query.BrowseQueryTree(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.Constructor">
            <summary>Sets the shim of Query.Query()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.CreateBookMarkMessage">
            <summary>Sets the shim of Query.CreateBookMark(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.CreateHomePageQueryMessage">
            <summary>Sets the shim of Query.CreateHomePageQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.CreateQueryMessage">
            <summary>Sets the shim of Query.CreateQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.DeleteQueryMessage">
            <summary>Sets the shim of Query.DeleteQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.GetHomePageConfigMessage">
            <summary>Sets the shim of Query.GetHomePageConfig(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.GetHomePageQueriesByIdMessage">
            <summary>Sets the shim of Query.GetHomePageQueriesById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.GetHomePageQueriesMessage">
            <summary>Sets the shim of Query.GetHomePageQueries(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.GetQueryResultsMessage">
            <summary>Sets the shim of Query.GetQueryResults(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.MoveQueryMessage">
            <summary>Sets the shim of Query.MoveQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.RemoveBookMarkMessage">
            <summary>Sets the shim of Query.RemoveBookMark(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.RemoveHomePageQueryMessage">
            <summary>Sets the shim of Query.RemoveHomePageQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.RenameQueryMessage">
            <summary>Sets the shim of Query.RenameQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.SaveALLQueryStream">
            <summary>Sets the shim of Query.SaveALLQuery(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.SaveHomePageConfigStream">
            <summary>Sets the shim of Query.SaveHomePageConfig(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.UpdatePostionForQueryStream">
            <summary>Sets the shim of Query.UpdatePostionForQuery(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.UpdateQueryMessage">
            <summary>Sets the shim of Query.UpdateQuery(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuery.ValidateMessage">
            <summary>Sets the shim of Query.Validate(Message message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimQueryGroup">
            <summary>Shim type of CmService.Service.QueryGroup</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQueryGroup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQueryGroup.#ctor(CmService.Service.QueryGroup)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimQueryGroup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryGroup.AllInstances.CreateQueryGroupMessage">
            <summary>Sets the shim of QueryGroup.CreateQueryGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryGroup.AllInstances.DeleteQueryGroupMessage">
            <summary>Sets the shim of QueryGroup.DeleteQueryGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryGroup.AllInstances.GetQueryGroupsMessage">
            <summary>Sets the shim of QueryGroup.GetQueryGroups(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryGroup.AllInstances.MoveQueryGroupMessage">
            <summary>Sets the shim of QueryGroup.MoveQueryGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryGroup.AllInstances.UpdateQueryGroupMessage">
            <summary>Sets the shim of QueryGroup.UpdateQueryGroup(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQueryGroup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQueryGroup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryGroup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQueryGroup.Bind(Onyx.GatewayContract.IQueryGroup)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryGroup.Constructor">
            <summary>Sets the shim of QueryGroup.QueryGroup()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryGroup.CreateQueryGroupMessage">
            <summary>Sets the shim of QueryGroup.CreateQueryGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryGroup.DeleteQueryGroupMessage">
            <summary>Sets the shim of QueryGroup.DeleteQueryGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryGroup.GetQueryGroupsMessage">
            <summary>Sets the shim of QueryGroup.GetQueryGroups(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryGroup.MoveQueryGroupMessage">
            <summary>Sets the shim of QueryGroup.MoveQueryGroup(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryGroup.UpdateQueryGroupMessage">
            <summary>Sets the shim of QueryGroup.UpdateQueryGroup(Message message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimQueryHelper">
            <summary>Shim type of CmService.Service.QueryHelper</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQueryHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQueryHelper.#ctor(CmService.Service.QueryHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimQueryHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryHelper.AllInstances.DeleteStagedDataMessage">
            <summary>Sets the shim of QueryHelper.DeleteStagedData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryHelper.AllInstances.GetQueryProfileMessage">
            <summary>Sets the shim of QueryHelper.GetQueryProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryHelper.AllInstances.GetQueryResultMessage">
            <summary>Sets the shim of QueryHelper.GetQueryResult(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQueryHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQueryHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQueryHelper.Bind(Onyx.GatewayContract.IQueryHelper)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryHelper.Constructor">
            <summary>Sets the shim of QueryHelper.QueryHelper()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryHelper.DeleteStagedDataMessage">
            <summary>Sets the shim of QueryHelper.DeleteStagedData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryHelper.GetQueryProfileMessage">
            <summary>Sets the shim of QueryHelper.GetQueryProfile(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQueryHelper.GetQueryResultMessage">
            <summary>Sets the shim of QueryHelper.GetQueryResult(Message message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimQuote">
            <summary>Shim type of CmService.Service.Quote</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQuote.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQuote.#ctor(CmService.Service.Quote)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimQuote.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuote.AllInstances.EntityNameGet">
            <summary>Sets the shim of Quote.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuote.AllInstances.GetDetailsViewByIdMessage">
            <summary>Sets the shim of Quote.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQuote.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQuote.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuote.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimQuote.Bind(Onyx.GatewayContract.IQuote)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuote.Constructor">
            <summary>Sets the shim of Quote.Quote()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuote.EntityNameGet">
            <summary>Sets the shim of Quote.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimQuote.GetDetailsViewByIdMessage">
            <summary>Sets the shim of Quote.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimReferenceLookups">
            <summary>Shim type of CmService.Service.ReferenceLookups</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimReferenceLookups.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimReferenceLookups.#ctor(CmService.Service.ReferenceLookups)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimReferenceLookups.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimReferenceLookups.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimReferenceLookups.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimReferenceLookups.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimReferenceLookups.Constructor">
            <summary>Sets the shim of ReferenceLookups.ReferenceLookups()</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimReturnJson">
            <summary>Shim type of CmService.Service.ReturnJson</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimReturnJson.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimReturnJson.#ctor(CmService.Service.ReturnJson)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimReturnJson.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimReturnJson.AllInstances.ParametersReturnGet">
            <summary>Sets the shim of ReturnJson.get_ParametersReturn()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimReturnJson.AllInstances.ParametersReturnSetParametersReturn">
            <summary>Sets the shim of ReturnJson.set_ParametersReturn(ParametersReturn value)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimReturnJson.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimReturnJson.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimReturnJson.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimReturnJson.Constructor">
            <summary>Sets the shim of ReturnJson.ReturnJson()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimReturnJson.ParametersReturnGet">
            <summary>Sets the shim of ReturnJson.get_ParametersReturn()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimReturnJson.ParametersReturnSetParametersReturn">
            <summary>Sets the shim of ReturnJson.set_ParametersReturn(ParametersReturn value)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimReturnXml">
            <summary>Shim type of CmService.Service.ReturnXml</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimReturnXml.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimReturnXml.#ctor(CmService.Service.ReturnXml)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimReturnXml.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimReturnXml.AllInstances.ReturnJsonGet">
            <summary>Sets the shim of ReturnXml.get_ReturnJson()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimReturnXml.AllInstances.ReturnJsonSetReturnJson">
            <summary>Sets the shim of ReturnXml.set_ReturnJson(ReturnJson value)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimReturnXml.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimReturnXml.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimReturnXml.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimReturnXml.Constructor">
            <summary>Sets the shim of ReturnXml.ReturnXml()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimReturnXml.ReturnJsonGet">
            <summary>Sets the shim of ReturnXml.get_ReturnJson()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimReturnXml.ReturnJsonSetReturnJson">
            <summary>Sets the shim of ReturnXml.set_ReturnJson(ReturnJson value)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimRow1">
            <summary>Shim type of CmService.Service.Row1</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimRow1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimRow1.#ctor(CmService.Service.Row1)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimRow1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRow1.AllInstances.RowGet">
            <summary>Sets the shim of Row1.get_Row()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRow1.AllInstances.RowSetListOfObject">
            <summary>Sets the shim of Row1.set_Row(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimRow1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimRow1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRow1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRow1.Constructor">
            <summary>Sets the shim of Row1.Row1()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRow1.RowGet">
            <summary>Sets the shim of Row1.get_Row()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRow1.RowSetListOfObject">
            <summary>Sets the shim of Row1.set_Row(List`1&lt;Object&gt; value)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimRowSet">
            <summary>Shim type of CmService.Service.RowSet</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimRowSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimRowSet.#ctor(CmService.Service.RowSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimRowSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRowSet.AllInstances.ColumnDefinitionsGet">
            <summary>Sets the shim of RowSet.get_ColumnDefinitions()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRowSet.AllInstances.ColumnDefinitionsSetListOfColumnDefinition1">
            <summary>Sets the shim of RowSet.set_ColumnDefinitions(List`1&lt;ColumnDefinition1&gt; value)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRowSet.AllInstances.RowsGet">
            <summary>Sets the shim of RowSet.get_Rows()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRowSet.AllInstances.RowsSetListOfRow1">
            <summary>Sets the shim of RowSet.set_Rows(List`1&lt;Row1&gt; value)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimRowSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimRowSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRowSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRowSet.ColumnDefinitionsGet">
            <summary>Sets the shim of RowSet.get_ColumnDefinitions()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRowSet.ColumnDefinitionsSetListOfColumnDefinition1">
            <summary>Sets the shim of RowSet.set_ColumnDefinitions(List`1&lt;ColumnDefinition1&gt; value)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRowSet.Constructor">
            <summary>Sets the shim of RowSet.RowSet()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRowSet.RowsGet">
            <summary>Sets the shim of RowSet.get_Rows()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRowSet.RowsSetListOfRow1">
            <summary>Sets the shim of RowSet.set_Rows(List`1&lt;Row1&gt; value)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimRuntimeObjectBuilder">
            <summary>Shim type of CmService.Service.RuntimeObjectBuilder</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimRuntimeObjectBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimRuntimeObjectBuilder.#ctor(CmService.Service.RuntimeObjectBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRuntimeObjectBuilder.AddListPropertyStringString">
            <summary>Sets the shim of RuntimeObjectBuilder.AddListProperty(String className, String propertyName)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRuntimeObjectBuilder.AddObjectPropertyStringString">
            <summary>Sets the shim of RuntimeObjectBuilder.AddObjectProperty(String className, String propertyName)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRuntimeObjectBuilder.AddPropertyStringString">
            <summary>Sets the shim of RuntimeObjectBuilder.AddProperty(String className, String propertyName)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRuntimeObjectBuilder.AddPropertyStringXmlNodeBoolean">
            <summary>Sets the shim of RuntimeObjectBuilder.AddProperty(String className, XmlNode node, Boolean isAttributeHasProperties)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimRuntimeObjectBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimRuntimeObjectBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimRuntimeObjectBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRuntimeObjectBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRuntimeObjectBuilder.Constructor">
            <summary>Sets the shim of RuntimeObjectBuilder.RuntimeObjectBuilder()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRuntimeObjectBuilder.CreateClassString">
            <summary>Sets the shim of RuntimeObjectBuilder.CreateClass(String className)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRuntimeObjectBuilder.CreateObjectString">
            <summary>Sets the shim of RuntimeObjectBuilder.CreateObject(String className)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimRuntimeObjectBuilder.StaticConstructor">
            <summary>Sets the shim of RuntimeObjectBuilder.RuntimeObjectBuilder()</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimSalesOpportunity">
            <summary>Shim type of CmService.Service.SalesOpportunity</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSalesOpportunity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSalesOpportunity.#ctor(CmService.Service.SalesOpportunity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimSalesOpportunity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSalesOpportunity.AllInstances.EntityNameGet">
            <summary>Sets the shim of SalesOpportunity.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSalesOpportunity.AllInstances.UpdateRecallDateStream">
            <summary>Sets the shim of SalesOpportunity.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSalesOpportunity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSalesOpportunity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSalesOpportunity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSalesOpportunity.Bind(Onyx.GatewayContract.ISalesOpportunity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSalesOpportunity.Constructor">
            <summary>Sets the shim of SalesOpportunity.SalesOpportunity()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSalesOpportunity.EntityNameGet">
            <summary>Sets the shim of SalesOpportunity.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSalesOpportunity.UpdateRecallDateStream">
            <summary>Sets the shim of SalesOpportunity.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimSavedQueries">
            <summary>Shim type of CmService.Service.SavedQueries</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSavedQueries.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSavedQueries.#ctor(CmService.Service.SavedQueries)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimSavedQueries.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSavedQueries.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSavedQueries.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSavedQueries.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSavedQueries.Constructor">
            <summary>Sets the shim of SavedQueries.SavedQueries()</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimScript">
            <summary>Shim type of CmService.Service.Script</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimScript.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimScript.#ctor(CmService.Service.Script)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimScript.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimScript.AllInstances.EntityNameGet">
            <summary>Sets the shim of Script.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimScript.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimScript.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimScript.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimScript.Bind(Onyx.GatewayContract.IScript)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimScript.Constructor">
            <summary>Sets the shim of Script.Script()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimScript.EntityNameGet">
            <summary>Sets the shim of Script.get_EntityName()</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimServiceRequest">
            <summary>Shim type of CmService.Service.ServiceRequest</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimServiceRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimServiceRequest.#ctor(CmService.Service.ServiceRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimServiceRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceRequest.AllInstances.EntityNameGet">
            <summary>Sets the shim of ServiceRequest.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceRequest.AllInstances.UpdateRecallDateStream">
            <summary>Sets the shim of ServiceRequest.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimServiceRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimServiceRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimServiceRequest.Bind(Onyx.GatewayContract.IServiceRequest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceRequest.Constructor">
            <summary>Sets the shim of ServiceRequest.ServiceRequest()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceRequest.EntityNameGet">
            <summary>Sets the shim of ServiceRequest.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceRequest.UpdateRecallDateStream">
            <summary>Sets the shim of ServiceRequest.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimServiceRequestInspector">
            <summary>Shim type of CmService.Service.ServiceRequestInspector</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimServiceRequestInspector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimServiceRequestInspector.#ctor(CmService.Service.ServiceRequestInspector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimServiceRequestInspector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimServiceRequestInspector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimServiceRequestInspector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceRequestInspector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceRequestInspector.Constructor">
            <summary>Sets the shim of ServiceRequestInspector.ServiceRequestInspector()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceRequestInspector.InspectIncomingRequest">
            <summary>Sets the shim of ServiceRequestInspector.InspectIncomingRequest()</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimServiceResponse">
            <summary>Shim type of CmService.Service.ServiceResponse</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimServiceResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimServiceResponse.#ctor(CmService.Service.ServiceResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimServiceResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceResponse.AllInstances.CreateMessage">
            <summary>Sets the shim of ServiceResponse.CreateMessage()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceResponse.AllInstances.MessageFormatGet">
            <summary>Sets the shim of ServiceResponse.get_MessageFormat()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceResponse.AllInstances.MessageFormatSetResponseMessageFormat">
            <summary>Sets the shim of ServiceResponse.set_MessageFormat(ResponseMessageFormat value)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceResponse.AllInstances.OutputMessageGet">
            <summary>Sets the shim of ServiceResponse.get_OutputMessage()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceResponse.AllInstances.OutputMessageSetString">
            <summary>Sets the shim of ServiceResponse.set_OutputMessage(String value)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimServiceResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimServiceResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceResponse.Constructor">
            <summary>Sets the shim of ServiceResponse.ServiceResponse()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceResponse.CreateMessage">
            <summary>Sets the shim of ServiceResponse.CreateMessage()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceResponse.CreateMessageResponseMessageFormatString">
            <summary>Sets the shim of ServiceResponse.CreateMessage(ResponseMessageFormat MessageFormat, String OutputMessage)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceResponse.MessageFormatGet">
            <summary>Sets the shim of ServiceResponse.get_MessageFormat()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceResponse.MessageFormatSetResponseMessageFormat">
            <summary>Sets the shim of ServiceResponse.set_MessageFormat(ResponseMessageFormat value)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceResponse.OutputMessageGet">
            <summary>Sets the shim of ServiceResponse.get_OutputMessage()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimServiceResponse.OutputMessageSetString">
            <summary>Sets the shim of ServiceResponse.set_OutputMessage(String value)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimSocial">
            <summary>Shim type of CmService.Service.Social</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSocial.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSocial.#ctor(CmService.Service.Social)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimSocial.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSocial.AllInstances.EntityNameGet">
            <summary>Sets the shim of Social.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSocial.AllInstances.GetTweetMessage">
            <summary>Sets the shim of Social.GetTweet(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSocial.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSocial.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSocial.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSocial.Bind(Onyx.GatewayContract.ISocial)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSocial.Constructor">
            <summary>Sets the shim of Social.Social()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSocial.EntityNameGet">
            <summary>Sets the shim of Social.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSocial.GetTweetMessage">
            <summary>Sets the shim of Social.GetTweet(Message message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimSupportIncident">
            <summary>Shim type of CmService.Service.SupportIncident</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSupportIncident.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSupportIncident.#ctor(CmService.Service.SupportIncident)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimSupportIncident.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportIncident.AllInstances.EntityNameGet">
            <summary>Sets the shim of SupportIncident.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportIncident.AllInstances.UpdateRecallDateStream">
            <summary>Sets the shim of SupportIncident.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSupportIncident.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSupportIncident.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportIncident.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSupportIncident.Bind(Onyx.GatewayContract.ISupportIncident)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportIncident.Constructor">
            <summary>Sets the shim of SupportIncident.SupportIncident()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportIncident.EntityNameGet">
            <summary>Sets the shim of SupportIncident.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportIncident.UpdateRecallDateStream">
            <summary>Sets the shim of SupportIncident.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimSupportTask">
            <summary>Shim type of CmService.Service.SupportTask</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSupportTask.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSupportTask.#ctor(CmService.Service.SupportTask)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimSupportTask.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportTask.AllInstances.EntityNameGet">
            <summary>Sets the shim of SupportTask.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportTask.AllInstances.GetDetailsViewByIdMessage">
            <summary>Sets the shim of SupportTask.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportTask.AllInstances.GetTaskFieldMetaDataMessage">
            <summary>Sets the shim of SupportTask.GetTaskFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportTask.AllInstances.SaveStream">
            <summary>Sets the shim of SupportTask.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportTask.AllInstances.UpdateRecallDateStream">
            <summary>Sets the shim of SupportTask.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSupportTask.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSupportTask.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportTask.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimSupportTask.Bind(Onyx.GatewayContract.ISupportTask)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportTask.Constructor">
            <summary>Sets the shim of SupportTask.SupportTask()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportTask.EntityNameGet">
            <summary>Sets the shim of SupportTask.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportTask.GetDetailsViewByIdMessage">
            <summary>Sets the shim of SupportTask.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportTask.GetTaskFieldMetaDataMessage">
            <summary>Sets the shim of SupportTask.GetTaskFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportTask.SaveStream">
            <summary>Sets the shim of SupportTask.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimSupportTask.UpdateRecallDateStream">
            <summary>Sets the shim of SupportTask.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimTask">
            <summary>Shim type of CmService.Service.Task</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimTask.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimTask.#ctor(CmService.Service.Task)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimTask.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimTask.AllInstances.EntityNameGet">
            <summary>Sets the shim of Task.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimTask.AllInstances.GetDetailsViewByIdMessage">
            <summary>Sets the shim of Task.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimTask.AllInstances.GetTaskFieldMetaDataMessage">
            <summary>Sets the shim of Task.GetTaskFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimTask.AllInstances.SaveStream">
            <summary>Sets the shim of Task.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimTask.AllInstances.UpdateRecallDateStream">
            <summary>Sets the shim of Task.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimTask.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimTask.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimTask.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimTask.Bind(Onyx.GatewayContract.ITask)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimTask.Constructor">
            <summary>Sets the shim of Task.Task()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimTask.EntityNameGet">
            <summary>Sets the shim of Task.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimTask.GetDetailsViewByIdMessage">
            <summary>Sets the shim of Task.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimTask.GetTaskFieldMetaDataMessage">
            <summary>Sets the shim of Task.GetTaskFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimTask.SaveStream">
            <summary>Sets the shim of Task.Save(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimTask.UpdateRecallDateStream">
            <summary>Sets the shim of Task.UpdateRecallDate(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimTransaction">
            <summary>Shim type of CmService.Service.Transaction</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimTransaction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimTransaction.#ctor(CmService.Service.Transaction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimTransaction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimTransaction.AllInstances.ExecuteMessage">
            <summary>Sets the shim of Transaction.Execute(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimTransaction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimTransaction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimTransaction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimTransaction.Bind(Onyx.GatewayContract.ITransaction)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimTransaction.Constructor">
            <summary>Sets the shim of Transaction.Transaction()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimTransaction.ExecuteMessage">
            <summary>Sets the shim of Transaction.Execute(Message message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimWorkTicket">
            <summary>Shim type of CmService.Service.WorkTicket</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimWorkTicket.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimWorkTicket.#ctor(CmService.Service.WorkTicket)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimWorkTicket.AddLinkStream">
            <summary>Sets the shim of WorkTicket.AddLink(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.ShimWorkTicket.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimWorkTicket.AllInstances.AddLinkStream">
            <summary>Sets the shim of WorkTicket.AddLink(Stream message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimWorkTicket.AllInstances.EntityNameGet">
            <summary>Sets the shim of WorkTicket.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimWorkTicket.AllInstances.GetDetailsViewByIdMessage">
            <summary>Sets the shim of WorkTicket.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimWorkTicket.AllInstances.GetWorkTicketFieldMetaDataMessage">
            <summary>Sets the shim of WorkTicket.GetWorkTicketFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimWorkTicket.AllInstances.SaveStream">
            <summary>Sets the shim of WorkTicket.Save(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimWorkTicket.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimWorkTicket.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimWorkTicket.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:CmService.Service.Fakes.ShimWorkTicket.Bind(Onyx.GatewayContract.IWorkTicket)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimWorkTicket.Constructor">
            <summary>Sets the shim of WorkTicket.WorkTicket()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimWorkTicket.EntityNameGet">
            <summary>Sets the shim of WorkTicket.get_EntityName()</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimWorkTicket.GetDetailsViewByIdMessage">
            <summary>Sets the shim of WorkTicket.GetDetailsViewById(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimWorkTicket.GetWorkTicketFieldMetaDataMessage">
            <summary>Sets the shim of WorkTicket.GetWorkTicketFieldMetaData(Message message)</summary>
        </member>
        <member name="P:CmService.Service.Fakes.ShimWorkTicket.SaveStream">
            <summary>Sets the shim of WorkTicket.Save(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubAbstractEntity">
            <summary>Stub type of CmService.Service.AbstractEntity</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubAbstractEntity.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubAbstractEntity.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubAbstractEntity.EntityName">
            <summary>Sets the stub of AbstractEntity.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubAbstractEntity.EntityNameGet">
            <summary>Sets the stub of AbstractEntity.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubAbstractEntity.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubAbstractEntity.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubAbstractEntity.InitializeStub">
            <summary>Initializes a new instance of type StubAbstractEntity</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubAbstractEntity.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubAbstractEntity.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubAbstractEntity.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubAbstractEntity.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubAbstractEntity.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubAbstractEntity.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubAnalytics">
            <summary>Stub type of CmService.Service.Analytics</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubAnalytics.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubAnalytics.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubAnalytics.InitializeStub">
            <summary>Initializes a new instance of type StubAnalytics</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubAnalytics.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubAnalytics.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubApplicationConfiguration">
            <summary>Stub type of CmService.Service.ApplicationConfiguration</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubApplicationConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubApplicationConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubApplicationConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubApplicationConfiguration</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubApplicationConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubApplicationConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubApplicationConfiguration.InvalidMethodType">
            <summary>Sets the stub of OtmDispatcher.InvalidMethodType()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubApplicationConfiguration.InvalidMethodType01">
            <summary>Sets the stub of OtmDispatcher.InvalidMethodType()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubApplicationConfiguration.Prepare(System.Collections.Hashtable)">
            <summary>Sets the stub of OtmDispatcher.Prepare(Hashtable parameterCollection)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubApplicationConfiguration.PrepareHashtable">
            <summary>Sets the stub of OtmDispatcher.Prepare(Hashtable parameterCollection)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubAppointment">
            <summary>Stub type of CmService.Service.Appointment</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubAppointment.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubAppointment.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubAppointment.EntityName">
            <summary>Sets the stub of Appointment.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubAppointment.EntityNameGet">
            <summary>Sets the stub of Appointment.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubAppointment.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubAppointment.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubAppointment.InitializeStub">
            <summary>Initializes a new instance of type StubAppointment</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubAppointment.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubAppointment.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubAppointment.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubAppointment.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubAppointment.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubAppointment.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubBatch">
            <summary>Stub type of CmService.Service.Batch</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubBatch.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubBatch.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubBatch.InitializeStub">
            <summary>Initializes a new instance of type StubBatch</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubBatch.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubBatch.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubColumnDefinition1">
            <summary>Stub type of CmService.Service.ColumnDefinition1</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubColumnDefinition1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubColumnDefinition1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubColumnDefinition1.InitializeStub">
            <summary>Initializes a new instance of type StubColumnDefinition1</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubColumnDefinition1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubColumnDefinition1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubCompany">
            <summary>Stub type of CmService.Service.Company</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubCompany.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubCompany.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubCompany.EntityName">
            <summary>Sets the stub of Company.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubCompany.EntityNameGet">
            <summary>Sets the stub of Company.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubCompany.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubCompany.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubCompany.InitializeStub">
            <summary>Initializes a new instance of type StubCompany</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubCompany.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubCompany.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubCompany.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubCompany.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubCompany.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubCompany.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubConnectivity">
            <summary>Stub type of CmService.Service.Connectivity</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubConnectivity.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubConnectivity.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubConnectivity.InitializeStub">
            <summary>Initializes a new instance of type StubConnectivity</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubConnectivity.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubConnectivity.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubContext">
            <summary>Stub type of CmService.Service.Context</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubContext.InitializeStub">
            <summary>Initializes a new instance of type StubContext</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubCustomer">
            <summary>Stub type of CmService.Service.Customer</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubCustomer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubCustomer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubCustomer.InitializeStub">
            <summary>Initializes a new instance of type StubCustomer</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubCustomer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubCustomer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubCustomerManagement">
            <summary>Stub type of CmService.Service.CustomerManagement</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubCustomerManagement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubCustomerManagement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubCustomerManagement.InitializeStub">
            <summary>Initializes a new instance of type StubCustomerManagement</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubCustomerManagement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubCustomerManagement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubDetailView">
            <summary>Stub type of CmService.Service.DetailView</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubDetailView.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubDetailView.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubDetailView.InitializeStub">
            <summary>Initializes a new instance of type StubDetailView</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubDetailView.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubDetailView.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubDomainData">
            <summary>Stub type of CmService.Service.DomainData</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubDomainData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubDomainData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubDomainData.InitializeStub">
            <summary>Initializes a new instance of type StubDomainData</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubDomainData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubDomainData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubDomainData.InvalidMethodType">
            <summary>Sets the stub of OtmDispatcher.InvalidMethodType()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubDomainData.InvalidMethodType01">
            <summary>Sets the stub of OtmDispatcher.InvalidMethodType()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubDomainData.Prepare(System.Collections.Hashtable)">
            <summary>Sets the stub of OtmDispatcher.Prepare(Hashtable parameterCollection)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubDomainData.PrepareHashtable">
            <summary>Sets the stub of OtmDispatcher.Prepare(Hashtable parameterCollection)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubEmail">
            <summary>Stub type of CmService.Service.Email</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubEmail.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubEmail.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubEmail.EntityName">
            <summary>Sets the stub of Email.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubEmail.EntityNameGet">
            <summary>Sets the stub of Email.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubEmail.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubEmail.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubEmail.InitializeStub">
            <summary>Initializes a new instance of type StubEmail</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubEmail.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubEmail.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubEmail.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubEmail.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubEmail.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubEmail.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubErrors">
            <summary>Stub type of CmService.Service.Errors</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubErrors.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubErrors.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubErrors.InitializeStub">
            <summary>Initializes a new instance of type StubErrors</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubErrors.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubErrors.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubFileLink">
            <summary>Stub type of CmService.Service.FileLink</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubFileLink.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubFileLink.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubFileLink.EntityName">
            <summary>Sets the stub of FileLink.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubFileLink.EntityNameGet">
            <summary>Sets the stub of FileLink.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubFileLink.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubFileLink.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubFileLink.InitializeStub">
            <summary>Initializes a new instance of type StubFileLink</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubFileLink.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubFileLink.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubFileLink.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubFileLink.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubFileLink.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubFileLink.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubForecast">
            <summary>Stub type of CmService.Service.Forecast</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubForecast.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubForecast.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubForecast.EntityName">
            <summary>Sets the stub of Forecast.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubForecast.EntityNameGet">
            <summary>Sets the stub of Forecast.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubForecast.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubForecast.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubForecast.InitializeStub">
            <summary>Initializes a new instance of type StubForecast</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubForecast.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubForecast.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubForecast.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubForecast.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubForecast.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubForecast.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubGridActionMenu">
            <summary>Stub type of CmService.Service.GridActionMenu</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubGridActionMenu.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubGridActionMenu.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubGridActionMenu.InitializeStub">
            <summary>Initializes a new instance of type StubGridActionMenu</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubGridActionMenu.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubGridActionMenu.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubGroup">
            <summary>Stub type of CmService.Service.Group</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubGroup.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubGroup.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubGroup.InitializeStub">
            <summary>Initializes a new instance of type StubGroup</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubGroup.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubGroup.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubHelperMethod">
            <summary>Stub type of CmService.Service.HelperMethod</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubHelperMethod.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubHelperMethod.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubHelperMethod.InitializeStub">
            <summary>Initializes a new instance of type StubHelperMethod</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubHelperMethod.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubHelperMethod.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubIndividual">
            <summary>Stub type of CmService.Service.Individual</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubIndividual.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubIndividual.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubIndividual.EntityName">
            <summary>Sets the stub of Individual.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubIndividual.EntityNameGet">
            <summary>Sets the stub of Individual.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubIndividual.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubIndividual.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubIndividual.InitializeStub">
            <summary>Initializes a new instance of type StubIndividual</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubIndividual.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubIndividual.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubIndividual.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubIndividual.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubIndividual.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubIndividual.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubItem">
            <summary>Stub type of CmService.Service.Item</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubItem.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubItem.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubItem.InitializeStub">
            <summary>Initializes a new instance of type StubItem</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubItem.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubItem.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubJsonOutput">
            <summary>Stub type of CmService.Service.JsonOutput</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubJsonOutput.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubJsonOutput.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubJsonOutput.InitializeStub">
            <summary>Initializes a new instance of type StubJsonOutput</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubJsonOutput.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubJsonOutput.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubJsonWriter">
            <summary>Stub type of CmService.Service.JsonWriter</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubJsonWriter.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubJsonWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubJsonWriter.InitializeStub">
            <summary>Initializes a new instance of type StubJsonWriter</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubJsonWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubJsonWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubJsonWriter.OnBeginWriteBodyContents(System.Xml.XmlDictionaryWriter,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of BodyWriter.OnBeginWriteBodyContents(XmlDictionaryWriter writer, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubJsonWriter.OnBeginWriteBodyContentsXmlDictionaryWriterAsyncCallbackObject">
            <summary>Sets the stub of BodyWriter.OnBeginWriteBodyContents(XmlDictionaryWriter writer, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubJsonWriter.OnCreateBufferedCopy(System.Int32)">
            <summary>Sets the stub of BodyWriter.OnCreateBufferedCopy(Int32 maxBufferSize)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubJsonWriter.OnCreateBufferedCopyInt32">
            <summary>Sets the stub of BodyWriter.OnCreateBufferedCopy(Int32 maxBufferSize)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubJsonWriter.OnEndWriteBodyContents(System.IAsyncResult)">
            <summary>Sets the stub of BodyWriter.OnEndWriteBodyContents(IAsyncResult result)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubJsonWriter.OnEndWriteBodyContentsIAsyncResult">
            <summary>Sets the stub of BodyWriter.OnEndWriteBodyContents(IAsyncResult result)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubJsonWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
            <summary>Sets the stub of JsonWriter.OnWriteBodyContents(XmlDictionaryWriter writer)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubJsonWriter.OnWriteBodyContentsXmlDictionaryWriter">
            <summary>Sets the stub of JsonWriter.OnWriteBodyContents(XmlDictionaryWriter writer)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubNotificationManager">
            <summary>Stub type of CmService.Service.NotificationManager</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubNotificationManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubNotificationManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubNotificationManager.InitializeStub">
            <summary>Initializes a new instance of type StubNotificationManager</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubNotificationManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubNotificationManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubOperationProperties">
            <summary>Stub type of CmService.Service.OperationProperties</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubOperationProperties.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubOperationProperties.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubOperationProperties.InitializeStub">
            <summary>Initializes a new instance of type StubOperationProperties</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubOperationProperties.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubOperationProperties.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubOperators">
            <summary>Stub type of CmService.Service.Operators</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubOperators.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubOperators.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubOperators.InitializeStub">
            <summary>Initializes a new instance of type StubOperators</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubOperators.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubOperators.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubParametersReturn">
            <summary>Stub type of CmService.Service.ParametersReturn</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubParametersReturn.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubParametersReturn.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubParametersReturn.InitializeStub">
            <summary>Initializes a new instance of type StubParametersReturn</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubParametersReturn.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubParametersReturn.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubProduct">
            <summary>Stub type of CmService.Service.Product</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubProduct.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubProduct.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubProduct.EntityName">
            <summary>Sets the stub of Product.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubProduct.EntityNameGet">
            <summary>Sets the stub of Product.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubProduct.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubProduct.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubProduct.InitializeStub">
            <summary>Initializes a new instance of type StubProduct</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubProduct.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubProduct.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubProduct.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubProduct.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubProduct.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubProduct.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubProfileManager">
            <summary>Stub type of CmService.Service.ProfileManager</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubProfileManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubProfileManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubProfileManager.InitializeStub">
            <summary>Initializes a new instance of type StubProfileManager</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubProfileManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubProfileManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubQueries">
            <summary>Stub type of CmService.Service.Queries</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubQueries.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubQueries.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubQueries.InitializeStub">
            <summary>Initializes a new instance of type StubQueries</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubQueries.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubQueries.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubQuery">
            <summary>Stub type of CmService.Service.Query</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubQuery.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubQuery.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubQuery.InitializeStub">
            <summary>Initializes a new instance of type StubQuery</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubQuery.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubQuery.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubQueryGroup">
            <summary>Stub type of CmService.Service.QueryGroup</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubQueryGroup.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubQueryGroup.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubQueryGroup.InitializeStub">
            <summary>Initializes a new instance of type StubQueryGroup</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubQueryGroup.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubQueryGroup.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubQueryHelper">
            <summary>Stub type of CmService.Service.QueryHelper</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubQueryHelper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubQueryHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubQueryHelper.InitializeStub">
            <summary>Initializes a new instance of type StubQueryHelper</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubQueryHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubQueryHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubQuote">
            <summary>Stub type of CmService.Service.Quote</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubQuote.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubQuote.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubQuote.EntityName">
            <summary>Sets the stub of Quote.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubQuote.EntityNameGet">
            <summary>Sets the stub of Quote.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubQuote.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubQuote.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubQuote.InitializeStub">
            <summary>Initializes a new instance of type StubQuote</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubQuote.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubQuote.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubQuote.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubQuote.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubQuote.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubQuote.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubReferenceLookups">
            <summary>Stub type of CmService.Service.ReferenceLookups</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubReferenceLookups.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubReferenceLookups.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubReferenceLookups.InitializeStub">
            <summary>Initializes a new instance of type StubReferenceLookups</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubReferenceLookups.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubReferenceLookups.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubReturnJson">
            <summary>Stub type of CmService.Service.ReturnJson</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubReturnJson.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubReturnJson.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubReturnJson.InitializeStub">
            <summary>Initializes a new instance of type StubReturnJson</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubReturnJson.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubReturnJson.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubReturnXml">
            <summary>Stub type of CmService.Service.ReturnXml</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubReturnXml.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubReturnXml.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubReturnXml.InitializeStub">
            <summary>Initializes a new instance of type StubReturnXml</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubReturnXml.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubReturnXml.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubRow1">
            <summary>Stub type of CmService.Service.Row1</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubRow1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubRow1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubRow1.InitializeStub">
            <summary>Initializes a new instance of type StubRow1</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubRow1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubRow1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubRowSet">
            <summary>Stub type of CmService.Service.RowSet</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubRowSet.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubRowSet.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubRowSet.InitializeStub">
            <summary>Initializes a new instance of type StubRowSet</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubRowSet.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubRowSet.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubRuntimeObjectBuilder">
            <summary>Stub type of CmService.Service.RuntimeObjectBuilder</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubRuntimeObjectBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubRuntimeObjectBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubRuntimeObjectBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubRuntimeObjectBuilder</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubRuntimeObjectBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubRuntimeObjectBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubSalesOpportunity">
            <summary>Stub type of CmService.Service.SalesOpportunity</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSalesOpportunity.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSalesOpportunity.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSalesOpportunity.EntityName">
            <summary>Sets the stub of SalesOpportunity.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubSalesOpportunity.EntityNameGet">
            <summary>Sets the stub of SalesOpportunity.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSalesOpportunity.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubSalesOpportunity.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSalesOpportunity.InitializeStub">
            <summary>Initializes a new instance of type StubSalesOpportunity</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSalesOpportunity.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSalesOpportunity.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSalesOpportunity.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubSalesOpportunity.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSalesOpportunity.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubSalesOpportunity.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubSavedQueries">
            <summary>Stub type of CmService.Service.SavedQueries</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSavedQueries.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSavedQueries.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSavedQueries.InitializeStub">
            <summary>Initializes a new instance of type StubSavedQueries</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSavedQueries.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSavedQueries.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubScript">
            <summary>Stub type of CmService.Service.Script</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubScript.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubScript.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubScript.EntityName">
            <summary>Sets the stub of Script.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubScript.EntityNameGet">
            <summary>Sets the stub of Script.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubScript.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubScript.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubScript.InitializeStub">
            <summary>Initializes a new instance of type StubScript</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubScript.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubScript.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubScript.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubScript.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubScript.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubScript.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubServiceRequest">
            <summary>Stub type of CmService.Service.ServiceRequest</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubServiceRequest.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubServiceRequest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubServiceRequest.EntityName">
            <summary>Sets the stub of ServiceRequest.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubServiceRequest.EntityNameGet">
            <summary>Sets the stub of ServiceRequest.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubServiceRequest.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubServiceRequest.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubServiceRequest.InitializeStub">
            <summary>Initializes a new instance of type StubServiceRequest</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubServiceRequest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubServiceRequest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubServiceRequest.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubServiceRequest.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubServiceRequest.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubServiceRequest.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubServiceRequestInspector">
            <summary>Stub type of CmService.Service.ServiceRequestInspector</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubServiceRequestInspector.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubServiceRequestInspector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubServiceRequestInspector.InitializeStub">
            <summary>Initializes a new instance of type StubServiceRequestInspector</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubServiceRequestInspector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubServiceRequestInspector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubServiceResponse">
            <summary>Stub type of CmService.Service.ServiceResponse</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubServiceResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubServiceResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubServiceResponse.InitializeStub">
            <summary>Initializes a new instance of type StubServiceResponse</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubServiceResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubServiceResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubSocial">
            <summary>Stub type of CmService.Service.Social</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSocial.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSocial.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSocial.EntityName">
            <summary>Sets the stub of Social.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubSocial.EntityNameGet">
            <summary>Sets the stub of Social.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSocial.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubSocial.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSocial.InitializeStub">
            <summary>Initializes a new instance of type StubSocial</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSocial.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSocial.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSocial.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubSocial.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSocial.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubSocial.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubSupportIncident">
            <summary>Stub type of CmService.Service.SupportIncident</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSupportIncident.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSupportIncident.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSupportIncident.EntityName">
            <summary>Sets the stub of SupportIncident.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubSupportIncident.EntityNameGet">
            <summary>Sets the stub of SupportIncident.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSupportIncident.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubSupportIncident.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSupportIncident.InitializeStub">
            <summary>Initializes a new instance of type StubSupportIncident</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSupportIncident.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSupportIncident.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSupportIncident.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubSupportIncident.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSupportIncident.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubSupportIncident.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubSupportTask">
            <summary>Stub type of CmService.Service.SupportTask</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSupportTask.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSupportTask.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSupportTask.EntityName">
            <summary>Sets the stub of SupportTask.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubSupportTask.EntityNameGet">
            <summary>Sets the stub of SupportTask.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSupportTask.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubSupportTask.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSupportTask.InitializeStub">
            <summary>Initializes a new instance of type StubSupportTask</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSupportTask.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubSupportTask.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSupportTask.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubSupportTask.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubSupportTask.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubSupportTask.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubTask">
            <summary>Stub type of CmService.Service.Task</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubTask.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubTask.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubTask.EntityName">
            <summary>Sets the stub of Task.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubTask.EntityNameGet">
            <summary>Sets the stub of Task.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubTask.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubTask.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubTask.InitializeStub">
            <summary>Initializes a new instance of type StubTask</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubTask.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubTask.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubTask.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubTask.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubTask.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubTask.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubTransaction">
            <summary>Stub type of CmService.Service.Transaction</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubTransaction.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubTransaction.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubTransaction.InitializeStub">
            <summary>Initializes a new instance of type StubTransaction</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubTransaction.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubTransaction.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:CmService.Service.Fakes.StubWorkTicket">
            <summary>Stub type of CmService.Service.WorkTicket</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubWorkTicket.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubWorkTicket.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubWorkTicket.EntityName">
            <summary>Sets the stub of WorkTicket.get_EntityName()</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubWorkTicket.EntityNameGet">
            <summary>Sets the stub of WorkTicket.get_EntityName()</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubWorkTicket.GetWatchListByUserId(System.ServiceModel.Channels.Message)">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubWorkTicket.GetWatchListByUserIdMessage">
            <summary>Sets the stub of AbstractEntity.GetWatchListByUserId(Message message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubWorkTicket.InitializeStub">
            <summary>Initializes a new instance of type StubWorkTicket</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubWorkTicket.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:CmService.Service.Fakes.StubWorkTicket.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubWorkTicket.Search(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubWorkTicket.SearchStream">
            <summary>Sets the stub of AbstractEntity.Search(Stream message)</summary>
        </member>
        <member name="M:CmService.Service.Fakes.StubWorkTicket.Update(System.IO.Stream)">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
        <member name="F:CmService.Service.Fakes.StubWorkTicket.UpdateStream">
            <summary>Sets the stub of AbstractEntity.Update(Stream message)</summary>
        </member>
    </members>
</doc>
