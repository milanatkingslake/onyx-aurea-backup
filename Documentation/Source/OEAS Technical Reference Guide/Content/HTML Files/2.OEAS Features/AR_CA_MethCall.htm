<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:timeEstimate="0" MadCap:priority="0" MadCap:status="In Progress" MadCap:lastBlockDepth="5" MadCap:lastHeight="787" MadCap:lastWidth="624">
    <head>
        <link href="../../Resources/Stylesheets/ApteanOLH.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <head><title>Method calls</title>
            <link href="../../Resources/Stylesheets/ApteanOLH.css" rel="stylesheet" type="text/css" />
        </head>
        <h2>Method calls </h2>
        <p>Method calls are data-driven wrappers for or references to OEAS methods. 
 Method calls enable administrator 
 control regarding which OEAS methods are called, and how or when 
 they are called.</p>
        <p>You can create method calls  using the Method Call Designer, 
 a design workbench tool of the Onyx Enterprise Studio (OES). Administrators can thus define business 
 processes, persistence and retrieval operations, or script operations 
 without writing code or understanding XML. </p>
        <p>Method calls are used in the Templates and Scripting features of OEAS. The Method Calls feature supports creating method calls based on all 
 of the standard OEAS methods as well as any custom methods you might have 
 created. However, the Templates OEAS feature supports only retrieve, retrieveCollection, 
 and retrieveList method calls. </p>
        <p class="Important" MadCap:autonum="&lt;b&gt;Important:&lt;/b&gt; &#160;"> In general, method calls can call methods that persist 
 collections of objects (saveCollection methods). However, the behavior 
 of these methods (within the context of the method call) is limited. For 
 more information, see <a href="AR_CA_MethCallGdColl.htm">Collections.</a></p>
        <p>Additional benefits to using methods calls include: 
 </p>
        <ul>
            <li>Enabling non-technical and non-English speaking 
 users to understand OEAS methods and their parameters.</li>
        </ul>
        <p class="Indent1">The names of the objects, methods, and properties within the OEAS 
 object model use technical naming conventions and terminology that are 
 not likely to be meaningful to a non-developer. In addition, the names 
 are in English and are therefore unlikely to be meaningful to non-English 
 speaking users. As an abstraction layer, method calls enable you to use 
 user-friendly, language-sensitive names and descriptions for OEAS methods 
 and their inputs and outputs. </p>
        <ul>
            <li>Providing specialization of OEAS method calls.</li>
        </ul>
        <p class="Indent1">You can create multiple method call wrappers for each OEAS method. 
 Therefore, you can design each method call to be more focused for the 
 intended purpose than the underlying OEAS method. This simplifies the 
 method call for the non-developer user and allows tighter control over 
 which OEAS capabilities are exposed to the application. It also reduces 
 the technical requirement for defining the method calls, because you only 
 need to define the method call details (inputs and outputs) that matter 
 in each case. </p>
        <MadCap:snippetBlock src="../../Resources/Snippets/What would you like to do.flsnp" />
        <ul>
            <li><a href="AR_CA_MethCallComponents.htm">Learn about method call components</a>
            </li>
            <li><a href="ar_ca_methcalldesguidelines.htm">View method call design guidelines</a>
            </li>
            <li><a href="ar_ca_methcallmt.htm">Learn about Merge Template method calls</a>
            </li>
            <li><a href="ar_ca_methcallsw.htm">Learn about Script method calls</a>
            </li>
            <li><a href="../3.Configuring OEAS Features/ar_methcalldes.htm">Configuring end-user error messages</a>
            </li>
            <li><a href="ar_ca_methcallobjecttablemap.htm">View object to table mappings</a>
            </li>
            <li><a href="ar_ca_methcalldbtablerelation.htm">View database table relationships</a>
            </li>
            <li><a href="ar_ca_methcallobjectrelation.htm">View object relationships</a>
            </li>
        </ul>
    </body>
</html>