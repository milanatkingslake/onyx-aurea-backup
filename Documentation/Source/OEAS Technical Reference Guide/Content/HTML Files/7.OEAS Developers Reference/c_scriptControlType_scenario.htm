<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:check_list="Ran Smart Index" MadCap:timeEstimate="0" MadCap:priority="0" MadCap:status="In Progress" MadCap:lastBlockDepth="4" MadCap:lastHeight="458" MadCap:lastWidth="994">
    <head>
        <link href="../../Resources/Stylesheets/ApteanOLH.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <head><title>Scenario</title>
            <link href="../../Resources/Stylesheets/ApteanOLH.css" rel="stylesheet" type="text/css" />
        </head>
        <h4>
            <MadCap:keyword term="Scenario" />Scenario</h4>
        <p>For this scenario, assume that you want to design a script in which 
 the user delivering the script can search for a customer name that is 
 already in the database. You could use method calls (retrieveList and 
 retrieve) and several script steps to accomplish this, but it is more 
 efficient to reuse existing customer search functionality through a script 
 control in a single step.</p>
        <p>This sample illustrates how to create a new scriptControlType that uses 
 the existing jsDoQuickSearch() Javascript function to find a customer 
 name. When you click the control's button, jsDoQuickSearch() provides 
 a customer search pop-up window. You perform the search, and the function 
 returns the customer name to a textbox in the control.</p>
        <p>This sample's step include the following:</p>
        <ul>
            <li>Inserting new domain data</li>
            <li>Adding a Javascript class for the new control 
 type</li>
            <li>Creating an XSL template to render the HTML control 
 at runtime</li>
        </ul>
        <p>After performing the preceding steps, be sure to also 
 do the following:</p>
        <ul>
            <li>Use Scripting designer to create a test script.</li>
            <li>Use Onyx Employee Portal to test the scriptControlType 
 in action.</li>
        </ul>
    </body>
</html>