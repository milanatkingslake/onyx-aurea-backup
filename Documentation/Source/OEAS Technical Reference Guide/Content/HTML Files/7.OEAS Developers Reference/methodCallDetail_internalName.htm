<?xml version="1.0" encoding="utf-8"?>
<html MadCap:timeEstimate="0" MadCap:priority="0" MadCap:status="In Progress" MadCap:lastBlockDepth="4" MadCap:lastHeight="462" MadCap:lastWidth="934" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <body>
        <head><title>internalName (methodCallDetail)</title>
            <link href="../../Resources/Stylesheets/ApteanOLH.css" rel="stylesheet" type="text/css" />
        </head>
        <h2>
            <MadCap:keyword term="internalName" />internalName property</h2>
        <p>The internalName property of the <a href="methodCallDetail_object.htm"><MadCap:keyword term="methodCallDetail" />methodCallDetail</a> 
 object contains a non-localized, interface specification name for the 
 parameter.</p>
        <h3>Data type</h3>
        <p>string</p>
        <h3>Access</h3>
        <p>Read/write</p>
        <h3>Remarks</h3>
        <p>This property enables a "call by name" functionality 
 typical in many APIs or programming languages such as OEAS, SQL Server 
 (stored procedures), or Visual Basic. There are two primary benefits of 
 this functionality.</p>
        <ol>
            <li>It enables up front specification of an expected 
 interface agreed upon by the method call designer and the method call 
 consumer. Once this interface is defined, you can write an application 
 (method call consumer) so that it works with any method that meets the 
 interface requirements, even if the actual method is unknown to the method 
 call consumer.</li>
            <li>It insulates the method call consumer from changes 
 to the method call details. The method call designer can make any changes 
 to the method, as long as they do not add new required (and not defaulted) 
 inputs, and they do not remove or alter the internalName of the existing 
 details.</li>
        </ol>
    </body>
</html>