<?xml version="1.0" encoding="utf-8"?>
<html MadCap:check_list="Ran Smart Index" MadCap:timeEstimate="0" MadCap:priority="0" MadCap:status="In Progress" MadCap:lastBlockDepth="6" MadCap:lastHeight="753" MadCap:lastWidth="1146" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../../Resources/TableStyles/Aptean_Note_Table_1.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../Resources/Stylesheets/ApteanOLH.css" rel="stylesheet" type="text/css" /><title>Primary Key Columns</title>
    </head>
    <body>
        <h3>
            <MadCap:keyword term="primary;columns;Primary Key Columns" />Primary key columns</h3>
        <p>Each table you create should have a primary key. In the simplest case, 
 a table's primary key consists of a single column. Unless a table describes 
 an intersection (association) of other tables, it should have a simple 
 key. Intersection tables can have composite keys (more than one column) 
 that are "borrowed" from the other tables whose association 
 they describe. When a table is <span style="font-style: italic;">transactional</span>, 
 the Onyx standard is to supply it with its own singular unique key column 
 even when it is an intersection table (for example, external_contact). 
 This is because creating composite primary keys for transactional intersection 
 tables can cause problems with logically deleted records. A single-column 
 primary key allows a logically deleted intersection row to be inserted 
 again.</p>
        <p>Every primary key column should have a constraint identifying that it 
 is a "not null" column.</p>
        <p>Every <span style="font-style: italic;">domain</span> table must include 
 the column "site_id" as part of its primary key to be SQL generation 
 compliant. The site_id column is always filled by SQL generation with 
 a value from the user's context XML. The site ID value is determined at 
 OEAS installation. Keys structured this way are unique across multiple 
 sites.</p>
        <table style="mc-table-style: url('../../Resources/TableStyles/Aptean_Note_Table_1.css');width: 80%;" class="TableStyle-Aptean_Note_Table_1" cellspacing="2">
            <col style="width: 0.7cm;" class="TableStyle-Aptean_Note_Table_1-Column-Column1" />
            <col class="TableStyle-Aptean_Note_Table_1-Column-Column1" style="width: 15.50cm;" />
            <tbody>
                <tr class="TableStyle-Aptean_Note_Table_1-Body-Body1">
                    <td class="TableStyle-Aptean_Note_Table_1-BodyB-Column1-Body1" style="text-align: right;">
                        <p>
                            <img src="../../Resources/Images/Common/note_image.png" />
                        </p>
                    </td>
                    <td class="TableStyle-Aptean_Note_Table_1-BodyA-Column1-Body1">
                        <p class="TableText"><b>Note</b>: Transactional and domain tables correspond to transactional 
 and domain objects. For a definition of transactional objects see <a href="object_categories.htm">Transactional 
 and non-transactional objects</a>. For a definition of domain objects 
 see Domain objects.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h4>Simple key column for a transactional table</h4>
        <p>The Onyx standard name for a simple key column is the table name plus 
 the suffix "_ID." The SQL Server data type for this property 
 is "UNIQUEIDENTIFIER" and SQL generation will expect it to contain 
 a binary number converted from a <a href="customizingOEDB_GUID_Generation.htm">GUID</a> 
 supplied by the middle tier. For transactional tables the site_id column 
 is not part of the primary key. This is because the GUID values are unique 
 across all sites, applications, and servers without this additional site 
 ID information.</p>
        <h4>Simple key columns for a domain table</h4>
        <p>There are two classifications of simple primary key columns used for 
 domain tables. These are "generated" and "natural." 
 In some cases, your design has a key that is automatically generated by 
 the system. In other cases, your design may have a key value that is entered 
 directly by the user. We refer to such keys as "natural." An 
 example is the country_code column in the country table, where the keys 
 are country abbreviations, such as UK for the United Kingdom. Use natural 
 keys only when the key value itself should have meaning and will be used 
 elsewhere. Make sure your selection agrees with your object model design. 
 Again, every domain table must also include the column "site_id" 
 as part of its primary key to be compliant with SQL code used by OEAS.</p>
        <h3>Generated domain table keys</h3>
        <p>The Onyx standard name for a simple key column on a domain table is 
 the table name plus the suffix "_DID." (The "DID" 
 stands for "domain identifier.") The SQL Server data type for 
 this property is "INT" and SQL generation will expect it to 
 contain an integer generated in the database tier. To ensure that the 
 value is generated in the database we create the column as an identity 
 column. The primary key would then consist of the "DID" column 
 plus the site_id column.</p>
        <h3>Natural domain table keys</h3>
        <p>The Onyx standard name for a natural key column is the table name with 
 the suffix "_CODE" appended. The primary key would then consist 
 of the "CODE" column plus the site_id column.</p>
        <h4>Composite keys for intersection tables</h4>
        <p>Composite keys should be used only for domain 
 tables that represent an intersection of other tables (for example, question_response). 
 The names of the key columns should be identical to the tables from which 
 they are "borrowed." The data types should be identical to the 
 types of the key columns that are being borrowed. Additionally, it is 
 advisable to specify foreign key constraints on these columns to ensure 
 relational integrity. The primary key would then consist of the intersection 
 (foreign key) columns plus the site_id column. </p>
    </body>
</html>