<?xml version="1.0" encoding="utf-8"?>
<html MadCap:check_list="Ran Smart Index" MadCap:timeEstimate="0" MadCap:priority="0" MadCap:status="In Progress" MadCap:lastBlockDepth="4" MadCap:lastHeight="516" MadCap:lastWidth="994" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../../Resources/Stylesheets/ApteanOLH.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <head><title>Custom scriptControlType sample</title>
            <link href="../../Resources/Stylesheets/ApteanOLH.css" rel="stylesheet" type="text/css" />
        </head>
        <h4>
            <MadCap:keyword term="scriptControlType" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" />
            <MadCap:keyword term="Custom scriptControlType sample" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" />Custom scriptControlType sample</h4>
        <p>The script control types represent run-time user-interface behavior 
 that you can specify in a script at design time. The run-time characteristics 
 of the control are stored as domain data in the script_control_type table 
 in OEDB. The <a href="scriptControlType_object.htm">scriptControlType</a> 
 logical business object (LBO) supports inserting, retrieving, updating, 
 and deleting the domain data. Onyx does not currently support a user interface 
 for managing the domain data, but you can use Onyx LBO Tester or SQL tools 
 for this purpose. With the domain data in OEDB, you can use Onyx Enterprise 
 Studio Script Designer to associate the script control type with a script 
 prompt. For script delivery, Onyx Employee Portal (OEP) implements the 
 control behavior in Javascript and renders the control in the browser 
 using XSL templates.</p>
        <h3>Customization steps</h3>
        <p>Adding a new script control type to the platform involves 
 three steps.</p>
        <ol>
            <li>Inserting the new domain data into the database</li>
            <li>Creating a Javascript class for the user interface</li>
            <li>Creating an XSL template to render the HTML</li>
        </ol>
        <p>The following sections explain these steps in more detail.</p>
        <ul>
            <li><a href="c_scriptControlType_Add_domain_data.htm">Add the scriptControlType 
 domain data</a>
            </li>
            <li><a href="c_scriptControlType_Add_the_javascript_class.htm">Add the Javascript 
 class</a>
            </li>
            <li><a href="c_scriptcontroltype_Add_the_stylesheet_template.htm">Add the 
 stylesheet template</a>
            </li>
        </ul>
    </body>
</html>