<?xml version="1.0" encoding="utf-8"?>
<html MadCap:check_list="Ran Smart Index" MadCap:timeEstimate="0" MadCap:priority="0" MadCap:status="In Progress" MadCap:lastBlockDepth="2" MadCap:lastHeight="3139" MadCap:lastWidth="702" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../../Resources/Stylesheets/ApteanOLH.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <head><title>execute (ITransactionManager)</title>
            <link href="../../Resources/Stylesheets/ApteanOLH.css" rel="stylesheet" type="text/css" />
        </head>
        <h4>
            <MadCap:keyword term="execute method" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" />
            <MadCap:keyword term="execute" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" />Execute method</h4>
        <p>The Execute method of the <a href="ITMgr_Intfc.htm"><MadCap:keyword term="ITransactionManager" />ITransactionManager 
 interface</a> initiates a call to a method of a business object.</p>
        <h3>Syntax</h3>
        <p><b>IDL</b>
        </p>
        <p Class="Code" class="code">HRESULT&#160;Execute(</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;[in]&#160;BSTR&#160;ApplicationName,&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;[in]&#160;BSTR&#160;LogicalObjectName,&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;[in]&#160;BSTR&#160;LogicalMethodName,&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;[in]&#160;BSTR&#160;SessionID,&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;[in,&#160;defaultvalue("")]&#160;BSTR&#160;ParamXML,&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;[in,&#160;defaultvalue("")]&#160;BSTR&#160;CustomDataXML,&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;[out,&#160;retval]&#160;BSTR*&#160;ReturnXML);</p>
        <p>
            IDL parameter descriptions
        </p>
        <p>ApplicationName</p>
        <p class="BodyTextIndent_1">[in] A string that identifies the application to use.</p>
        <p>LogicalObjectName</p>
        <p class="BodyTextIndent_1">[in] A string that identifies the business object that 
 contains the method to be called.</p>
        <p>LogicalMethodName</p>
        <p class="BodyTextIndent_1">[in] A string that identifies the business object method 
 to be called.</p>
        <p>SessionID</p>
        <p class="BodyTextIndent_1">[in] A GUID that identifies the session in use by the client 
 application. This ID is given to the client by an authentication component.</p>
        <p>ParamXML</p>
        <p class="BodyTextIndent_1">[in] A well-formed XML fragment that contains the parameters 
 passed to the method.</p>
        <p>CustomDataXML</p>
        <p class="BodyTextIndent_1">[in] A well-formed XML fragment that contains any special 
 data required by custom COM step components.</p>
        <p>ReturnXML</p>
        <p class="BodyTextIndent_1">[out, retval] A well-formed XML fragment that contains 
 the XML data returned by the method.</p>
        <p><b>Visual Basic</b>
        </p>
        <p Class="Code" class="code">Function&#160;Execute(</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;ApplicationName&#160;As&#160;String,&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;LogicalObjectName&#160;As&#160;String,&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;LogicalMethodName&#160;As&#160;String,&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;SessionID&#160;As&#160;String,&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;Optional&#160;ParamXML&#160;As&#160;String&#160;=&#160;"",&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;Optional&#160;CustomDataXML&#160;As&#160;String&#160;=&#160;"")&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;As&#160;String</p>
        <p>
            Visual Basic parameter descriptions
        </p>
        <p>ApplicationName</p>
        <p class="BodyTextIndent_1">[in] A string that identifies the application to use.</p>
        <p>LogicalObjectName</p>
        <p class="BodyTextIndent_1">[in] A string that identifies the business object that 
 contains the method to be called.</p>
        <p>LogicalMethodName</p>
        <p class="BodyTextIndent_1">[in] A string that identifies the business object method 
 to be called.</p>
        <p>SessionID</p>
        <p class="BodyTextIndent_1">[in] A GUID that identifies the session in use by the client 
 application. This ID is given to the client by an authentication component.</p>
        <p>ParamXML</p>
        <p class="BodyTextIndent_1">[in] A well-formed XML fragment that contains the parameters 
 passed to the method.</p>
        <p>CustomDataXML</p>
        <p class="BodyTextIndent_1">[in] A well-formed XML fragment that contains any special 
 data required by custom COM step components.</p>
        <p><b>C#</b>
        </p>
        <p>Use with the .NET <a href="Primary_interop_assembly.htm">primary interop 
 assembly</a> version of this component, OnyxTMPIA.</p>
        <p Class="Code" class="code">public&#160;string&#160;Execute(</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;string&#160;ApplicationName,&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;string&#160;LogicalObjectName,&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;string&#160;LogicalMethodName,&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;string&#160;SessionID,&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;string&#160;ParamXML,&#160;</p>
        <p Class="Code" class="code">&#160;&#160;&#160;&#160;string&#160;CustomDataXML)</p>
        <p>
            C# parameter descriptions
        </p>
        <p>ApplicationName</p>
        <p class="BodyTextIndent_1">[in] A string that identifies the application to use.</p>
        <p>LogicalObjectName</p>
        <p class="BodyTextIndent_1">[in] A string that identifies the business object that 
 contains the method to be called.</p>
        <p>LogicalMethodName</p>
        <p class="BodyTextIndent_1">[in] A string that identifies the business object method 
 to be called.</p>
        <p>SessionID</p>
        <p class="BodyTextIndent_1">[in] A GUID that identifies the session in use by the client 
 application. This ID is given to the client by an authentication component.</p>
        <p>ParamXML</p>
        <p class="BodyTextIndent_1">[in] Optional. A well-formed XML fragment that contains 
 the parameters passed to the method.</p>
        <p>CustomDataXML</p>
        <p class="BodyTextIndent_1">[in] Optional. A well-formed XML fragment that contains 
 any special data required by custom COM step components.</p>
        <h3>Return values</h3>
        <p>This method returns a well-formed XML fragment that contains the XML 
 data returned by the method specified in the LogicalMethodName parameter.</p>
        <h3>Remarks</h3>
        <p>The contents of the ParamXML argument vary from one method to the next. 
 Refer to the appropriate business object documentation for more information 
 on building the proper XML parameters.</p>
        <h3>Example</h3>
        <p>The following example demonstrates a simple call to the Execute method 
 from an Active Server Pages (ASP) client.</p>
        <p>
            View the VBScript sample code
        </p>
        <p Class="Code" class="code"><span style="color: #008000;">' Dim Variables</span>
        </p>
        <p Class="Code" class="code">Dim&#160;oAuthComp</p>
        <p Class="Code" class="code">Dim&#160;oOTM</p>
        <p Class="Code" class="code">Dim&#160;sSessionID</p>
        <p Class="Code" class="code">Dim&#160;sParamXML</p>
        <p Class="Code" class="code">Dim&#160;sCustomDataXML</p>
        <p Class="Code" class="code">Dim&#160;sOutputXML</p>
        <p Class="Code" class="code"><span style="color: #008000;">' Authenticate the user and get a session ID.</span>
        </p>
        <p Class="Code" class="code">Set&#160;oAuthComp&#160;=&#160;CreateObject("OnyxAuthenticate.AuthenticateOnyx")</p>
        <p Class="Code" class="code">sSessionID&#160;=&#160;oAuthComp.EstablishSession("username",&#160;"password",&#160;"ApplicationName",&#160;"Client&#160;Application&#160;Name",&#160;"1")</p>
        <p Class="Code" class="code"><span style="color: #008000;">' Build the input XML</span>
        </p>
        <p Class="Code" class="code">sParamXML&#160;=&#160;"&lt;parameters&gt;inputdata&lt;/parameters&gt;"</p>
        <p Class="Code" class="code">sCustomDataXML&#160;=&#160;""</p>
        <p Class="Code" class="code"><span style="color: #008000;">' Call the OTM</span>
        </p>
        <p Class="Code" class="code"><span style="color: #008000;">' Create the object</span>
        </p>
        <p Class="Code" class="code">Set&#160;oOTM&#160;=&#160;Server.Createobject("OnyxTransactionManager.TransactionManager")</p>
        <p Class="Code" class="code">sOutputXML&#160;=&#160;oOTM.Execute("ApplicationName",&#160;"object",&#160;"method",&#160;sSessionID,&#160;sParamXML,&#160;sCustomDataXML)</p>
        <p class="code" style="margin-bottom: 0;">'&#160;<span style="color: #008000;">Do something with the output XML</span></p>
    </body>
</html>