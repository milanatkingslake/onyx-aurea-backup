<?xml version="1.0" encoding="utf-8"?>
<html MadCap:check_list="Ran Smart Index" MadCap:timeEstimate="0" MadCap:priority="0" MadCap:status="In Progress" MadCap:lastBlockDepth="2" MadCap:lastHeight="614" MadCap:lastWidth="624" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../../Resources/Stylesheets/ApteanOLH.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <head><title>Referential Integrity</title>
            <link href="../../Resources/Stylesheets/ApteanOLH.css" rel="stylesheet" type="text/css" />
        </head>
        <h4>
            <MadCap:keyword term="Referential Integrity" />Referential integrity</h4>
        <p>To provide for maximum extensibility in application customization, SQL 
 generation produces code that performs some referential integrity checking 
 when executing standard insert, update, and delete actions based on relationships 
 defined in the OED. The Onyx Enterprise Database contains more extensive 
 referential integrity constraints. If you make changes to object information 
 that is linked across multiple database tables and you want to prevent 
 integrity constraint errors generated by the database, your client applications 
 should allow the user to select valid input data only.</p>
        <p>For the most part, each business object in the Object Designer maps 
 to its own base table in the database. If one object has a property that 
 is a reference to another object (or a domain value), your code should 
 expect that OEAS will verify the existence of the referenced object when 
 modifying the relevant information in the database.</p>
        <h5>Example</h5>
        <p>An incident object refers to an individual object through its ownerId 
 property. It also refers to an incidentCategory object through its categoryId 
 property. When you insert a new incident into the database, SQL generation 
 verifies that the ownerId exits and is not logically deleted, and the 
 database tier verifies that the categoryId property refers to existing 
 records via foreign key constraints.</p>
        <p>OEAS further supports referential integrity 
 through object relationships and cascade type. The OED contains relationship 
 information that specifies what properties form the relationship between 
 objects. You can view the <a href="relationships_attributes.htm">relationship</a> 
 information through the Object Designer. When you define relationships 
 for new objects, you specify the cascade type per relationship for the 
 object. The cascade type specifies the delete behavior for an object when 
 an object it refers to is deleted. For more information on cascade type 
 and relationships see the "<a href="standard_delete.htm">delete Standard 
 Method</a>" and "<a href="oed_relationships.htm">Relationships</a>" 
 topics. The cascade type on deletes ensures that records in the database 
 are not orphaned and prevents records from being deleted that are still 
 needed by related records. </p>
    </body>
</html>