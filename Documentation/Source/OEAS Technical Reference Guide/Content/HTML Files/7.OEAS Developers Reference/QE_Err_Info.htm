<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:check_list="Ran Smart Index" MadCap:timeEstimate="0" MadCap:priority="0" MadCap:status="In Progress" MadCap:lastBlockDepth="6" MadCap:lastHeight="780" MadCap:lastWidth="624">
    <head>
        <link href="../../Resources/TableStyles/Aptean_Table_1.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../Resources/Stylesheets/ApteanOLH.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <head><title>Error and Status Information</title>
            <link href="../../Resources/Stylesheets/ApteanOLH.css" rel="stylesheet" type="text/css" />
        </head>
        <h4>
            <MadCap:keyword term="status;Status information;Error" />Error and status information</h4>
        <p>
            <MadCap:keyword term="Error information" />The methods of the IEBusQE interface return SQL status and error information 
 in a two-dimensional SafeArray (equivalent to a standard Variant array 
 in Visual Basic) that is separate from the result set.</p>
        <p>Each message in the status array has two parts: a message number (in 
 column 0) and a message string (in column 1). The first dimension in the 
 array represents the rows of the status message list. The second dimension 
 represents the columns. This array always has two columns and at least 
 one row.</p>
        <p>This status array can contain the following:</p>
        <table>
            <col />
            <col />
            <thead>
                <tr>
                    <th>Message format or range</th>
                    <th>Error source</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <p class="Table_Text" style="margin-bottom: 0;">0 
 - 99,999   </p>
                    </td>
                    <td>
                        <p class="Table_Text" style="margin-bottom: 0;">Error 
 and warning messages from SQL Server or the OLE DB provider.   </p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p class="Table_Text" style="margin-bottom: 0;">100,000 - 199,999</p>
                    </td>
                    <td>
                        <p class="Table_Text" style="margin-bottom: 0;">Warning messages from the Query Engine.</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p class="Table_Text" style="margin-bottom: 0;">200,000 - 299,999</p>
                    </td>
                    <td>
                        <p class="Table_Text" style="margin-bottom: 0;">Error messages from the Query Engine.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>
        The status array can also contain 
 statements that were generated using the SQL Print command from within 
 a stored procedure. These statements do not have message numbers. When 
 the Query Engine adds a printed message to the status array, it uses zero 
 for the message number.
        </p>
        <p>If the command returned no messages, the first element in the array 
 contains Null for the message number and an empty string for the message. 
 To get the number of messages returned, check the upper bound of the first 
 dimension in the array. The lower bound of this dimension is always zero, 
 so if there are valid messages the count is the upper bound + 1.</p>
        <p>The existence of a message does not necessarily indicate a failure condition. 
 For example, if a SELECT query completed successfully but did not return 
 any records, the status array contains a warning message indicating that 
 the query opened no rows.</p>
        <p>Statements printed from stored procedures are appended to the status 
 array in reverse order of their creation. The first printed message from 
 a stored procedure has a larger index number relative to any messages 
 that followed it.</p>
        <p>A method that fails because of a more severe 
 COM-related error returns a bad HRESULT value. General COM errors include 
 failures related to component initializations, database connections, out-of-memory 
 problems, or server resource limitations. In Visual Basic, if a Query 
 Engine method returns a bad HRESULT (and calls the VB error handler), 
 the contents of the status array become unavailable. </p>
    </body>
</html>