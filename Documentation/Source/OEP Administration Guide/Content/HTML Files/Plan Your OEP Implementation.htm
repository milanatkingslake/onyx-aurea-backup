<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="8" MadCap:lastHeight="837" MadCap:lastWidth="624">
    <head><title></title>
        <link href="../Resources/Stylesheets/ApteanPDF.css" rel="stylesheet" />
    </head>
    <body>
        <h3><a name="top"></a>Plan Your OEP Implementation</h3>
        <p>After you understand how OEP works and how each group within your organization can best use it, draft a plan for how you might modify OEP to accommodate each group's unique needs and work flow.</p>
        <p>Before you begin to modify OEP, plan your OEP implementation.</p>
        <h4>Assess your users' needs</h4>
        <p>Assessing your users' needs—including their daily tasks and the way they accomplish those tasks—is important because it influences how you may want to configure the OEP user interface, and how many different OEP user interfaces you may want to configure. Using Onyx Enterprise Studio (OES), you can then create a separate <a href="Create Custom OEP Profiles.htm#top">OEP profile</a> for each OEP user interface that you plan to configure.</p>
        <p>Assessing your users' needs is also important because it determines the groups and roles that you create using OES, and how you place each Onyx user within the groups and roles that you define. For details on groups and roles, see <a href="Configure Users and User Access.htm#top">Configure users and user access</a>. </p>
        <h4>Create prototypes for UI design</h4>
        <p>Before modifying OEP, take the time to thoroughly design and plan the layout, navigation, and behavior for the OEP areas that you plan to modify. Consider creating a prototype of the user interface, and test the prototype by asking your users how they would use it to perform their daily tasks. &#160;</p>
        <h4>Understand which configurations can be accomplished via UCW</h4>
        <p>It is important to understand which modifications to OEP can be accomplished via UCW, and which require you to write custom code. In some cases, you may need to both <a href="OEP Configuration.htm#top">configure and customize OEP</a>. All <a href="Configuring OEP.htm#UCW">UCW-enabled areas</a> must be configured via UCW. To modify areas not enabled by UCW, however, you will need to write custom code. &#160;</p>
        <p>Note that you can write custom code within the UCW framework and, if you follow all guidelines for writing this code, it will be safely upgraded with all other UCW modifications when you upgrade to the next version of OEP.</p>
        <p>To understand the capabilities of UCW, create a sample OEP profile and design a custom UI, and keep this Help system—and particularly the <a href="Configuring OEP.htm#top">Configuring OEP</a> book—at your fingertips. </p>
        <h4>Create a sample OEP profile and design a custom UI</h4>
        <p>One of the best ways to learn what you can do via UCW is to create a sample <a href="Create Custom OEP Profiles.htm#top">OEP profile</a> that you can use for testing purposes, and then design the UI associated with that profile. Don't use the <a href="Global Profile.htm#top">Global profile</a> for testing purposes unless you plan to reinstall OEP to your development environment, because the changes that you make to OEP using the Global profile affect all profile-specific UIs, including the UI associated with the OEP User profile.</p>
        <p>For details on creating OEP profiles, see the online Help for OES Security Administration. </p>
        <h4><a name="Understa"></a>Understand the skill set required to make your desired modifications</h4>
        <p>While many configurations that can be completed using UCW require little more than knowledge about Onyx products and your organization's usage requirements, other configurations may require some programming experience. Carefully consider the skill set of each of your UCW designers and developers to ensure that they are the right person to complete the configuration task. </p>
        <table>
            <thead>
                <tr>
                    <th>Type of UCW configuration</th>
                    <th>Skill set required</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        <p class="Table_Text">Most UCW configurations &#160;</p>
                    </td>
                    <td>
                        <ul>
                            <li class="TableList">A basic understanding of Web technologies and Boolean logic.</li>
                            <li class="TableList">An understanding of <a href="Dynamic Forms Designer Reference.htm#top">UCW actions, conditions, and events</a>.</li>
                            <li class="TableList">An understanding of OEAS objects, methods, and properties, which is required for data-binding controls. For details, see the OEAS <i>Technical Reference</i>. </li>
                        </ul>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p class="Table_Text">Complex UCW configurations that require you to use the Advanced View of Dynamic Forms Designer (see <a href="Advanced Configuration Examples.htm#top">advanced configuration examples</a>)</p>
                    </td>
                    <td>
                        <p class="Table_Text">Some programming experience. In particular, you should be familiar with writing, editing, and debugging JavaScript-formatted scripts and style sheets. </p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h4>Consider the impact of redesigning page layout</h4>
        <p>To redesign the layout of an OEP page (or one of its tabs), you can use a UCW tool called <a href="Using Canvas Designer.htm#top">Canvas Designer</a>. Canvas Designer enables you to create a canvas (which is comprised of one or more panels, just as a table is comprised of one or more cells) upon which you place your desired UI elements, such as UI controls, section demarcations, and so on. Once the canvas is created, you can easily move UI controls from one place on the canvas to another. But if you want to make more elaborate changes to page layout, you may need to delete the canvas and completely rebuild it. </p>
        <p>Note that the impact of rebuilding a canvas can be quite time consuming, especially if the canvas consists of numerous custom UI controls whose data binding will need to be reset. &#160;</p>
        <p>&#160;</p>
    </body>
</html>