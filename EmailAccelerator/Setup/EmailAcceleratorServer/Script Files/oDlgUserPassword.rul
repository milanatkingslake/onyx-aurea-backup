//------------------------------------------------------------------------
//   Function: ODlgUserPassword
//   same as SdShowDlgEdit3 with starred out second and third field
//   Third field added to confirm password entered in field two.
//------------------------------------------------------------------------
function ODlgUserPassword(szTitle,szMsg,svEdit1,svEdit2,nSpaceOkInPW,nLockName,nAllowPath,nANSIonly)
STRING  szDlg, szTemp,szField1,szField2,szField3,svEdit3;
NUMBER  nId, nMessage, nTemp,bBlankOk;
HWND    hwndDlg,hwndControl;
BOOL    bDone;
begin
    szDlg     = SD_DLG_SHOWDLGEDIT3;
	nSdDialog = SD_NDLG_SHOWDLGEDIT3;
 	szField1 = @LABEL_LOGIN;
 	szField2 = @LABEL_PASSWORD;
 	szField3 = @LABEL_CONFIRM;
 	svEdit3 = svEdit2;  //if a password is provided, copy to confirm
 	bBlankOk = TRUE; //no entry required on all dialogs.

    // record data produced by this dialog
	if (MODE=SILENTMODE) then
		SdMakeName( szAppKey, szDlg, szTitle, nSdShowDlgEdit3 );
        SilentReadData( szAppKey, "Result", DATA_NUMBER, szTemp, nId );
        if ((nId != BACK) && (nId != CANCEL)) then
        	SilentReadData( szAppKey, "szEdit1", DATA_STRING, svEdit1, nTemp );
            SilentReadData( szAppKey, "szEdit2", DATA_STRING, svEdit2, nTemp );
            SilentReadData( szAppKey, "szEdit3", DATA_STRING, svEdit3, nTemp );
        endif;

        return nId;
    endif;

    // ensure general initialization is complete
    if (!bSdInit) then
    	SdInit();
    endif;

    if (EzDefineDialog( szDlg, "", "", SD_NDLG_SHOWDLGEDIT3 ) = DLG_ERR) then
    	return -1;
    endif;

    // Loop in dialog until the user selects a standard button
    bDone = FALSE;

    while (!bDone)

    	nId = WaitOnDialog( szDlg );

        switch (nId)
        	case DLG_INIT:
            	if( szMsg != "" ) then
                	SdSetStatic(szDlg, SD_STA_MSG1, szMsg);
                endif;

                if (szField1 != "") then
                	SdSetStatic(szDlg, SD_STA_FIELD1, szField1 );
                endif;

                if (szField2 != "") then
                    SdSetStatic(szDlg, SD_STA_FIELD2, szField2 );
                endif;

                if (szField3 != "") then
                    SdSetStatic(szDlg, SD_STA_FIELD3, szField3 );
                endif;
                CtrlSetText(szDlg, SD_EDIT1, svEdit1);
                CtrlSetText(szDlg, SD_EDIT2, svEdit2);
				CtrlSetText(szDlg, SD_EDIT3, svEdit3);

                CtrlSetText(szDlg, 1, @BUTTON_NEXT);
                CtrlSetText(szDlg, 9, @BUTTON_CANCEL);
                CtrlSetText(szDlg, 12, @BUTTON_BACK);

                hwndDlg = CmdGetHwndDlg( szDlg );
                SdGeneralInit( szDlg, hwndDlg, STYLE_BOLD, szSdProduct );

                if(szTitle != "") then
                    SetWindowText(hwndDlg, szTitle);
                endif;

				//gray out account name if admin.
//this requires a SID resolving mechanism to know what the particular language OS uses for "administrator"
/*
				if(svEdit1 = @ADMINISTRATOR)then
					hwndControl = GetDlgItem(hwndDlg,SD_EDIT1);
					_WinSubEnableWindow ( hwndControl, 0 );
				endif;
*/
				//star out password and confirm edit control
				SendMessage(_WinSubGetChildWindow(hwndDlg,SD_EDIT2),EM_SETPASSWORDCHAR, ASTERISK , 0);
				SendMessage(_WinSubGetChildWindow(hwndDlg,SD_EDIT3),EM_SETPASSWORDCHAR, ASTERISK , 0);

				//gray out login if instructed in setup.ini.  Will not gray out if blank.
				if(nLockName && szField1 != "" )then
					hwndControl = GetDlgItem(hwndDlg,SD_EDIT1);
					_WinSubEnableWindow ( hwndControl, 0 );
				endif;

				// Set focus to first empty field in dialog
				if(svEdit1 = "")then
       		       	hwndControl = GetDlgItem(hwndDlg, SD_EDIT1);
       	    	elseif(svEdit2 = "")then
       	        	hwndControl = GetDlgItem(hwndDlg, SD_EDIT2);
 				else
 					hwndControl = GetDlgItem(hwndDlg, SD_PBUT_OK);
 				endif;
 				SetFocus(hwndControl);

			case SD_EDIT1:
            	nMessage = CtrlGetSubCommand(szDlg);

                if(nMessage = EDITBOX_CHANGE) then
                	CtrlGetText(szDlg, SD_EDIT1, svEdit1);
                endif;

            case SD_EDIT2:
                nMessage = CtrlGetSubCommand(szDlg);

                if(nMessage = EDITBOX_CHANGE) then
                    CtrlGetText(szDlg, SD_EDIT2, svEdit2);
                endif;
            case SD_EDIT3:
                nMessage = CtrlGetSubCommand(szDlg);
                if(nMessage = EDITBOX_CHANGE) then
                    CtrlGetText(szDlg, SD_EDIT3, svEdit3);
                endif;

            case SD_PBUT_OK:
                nId   = OK;
                bDone = TRUE;

               	//check entry lengths
            	if(OCheckStringLength(svEdit1,100,gszHelpUser) =FALSE )then;
					bDone = FALSE;
				endif;

				if(OCheckStringLength(svEdit2,40,gszHelpPassword) =FALSE )then;
					bDone = FALSE;
				endif;

				if (bDone = TRUE) then
	                //check the name field
    	            if(OCheckForIllegalChars(svEdit1,szField1,nAllowPath,FALSE,nANSIonly) = FALSE)then
        	    		bDone = FALSE;
						hwndControl = GetDlgItem(hwndDlg, SD_EDIT1);
      	        		SetFocus(hwndControl);
	                else
    	            	//check the fields for spaces
	    	        	if(nSpaceOkInPW = FALSE)then
	        	        	if(OCheckForSpaceChar(svEdit1,szField1) = FALSE)then
    	        		       		bDone = FALSE;
    	               		endif;
		                	if(OCheckForSpaceChar(svEdit2,szField2) = FALSE)then
    		               		bDone = FALSE;
    		               	endif;    	               		
        		        	
        	    	    	//in same case also check for a blank password
        	        		if(OCheckForIllegalChars(svEdit2,szField2,nAllowPath,bBlankOk,nANSIonly) = FALSE)then
        	        			bDone = FALSE;
	        	        	endif;
    	    	        endif;
        	    	    //check that password matches confirmed
						if (_CompareStringsByASCII(svEdit2,svEdit3) = FALSE)then  //for checking case
                   			bDone = FALSE;
           					MessageBox(@ERROR_PASSWORD_COMPARE,WARNING);
		           		endif;

 		           		//check to see that it is not blank
							           		
		           		if (StrLength(svEdit2) = 0)then
		           		
                   			bDone = FALSE;
           					MessageBox(@ERROR_PASSWORD_BLANK,WARNING);
           					
		           		endif;
    	
   	
    	    	        //set focus back to password
        	    	    if(bDone = FALSE)then
            	    		hwndControl = GetDlgItem(hwndDlg, SD_EDIT2);
      	        			SetFocus(hwndControl);
      	        		endif;
      	        	endif;
      	        endif;

			case BACK:
            	nId = BACK;
                bDone  = TRUE;

            case DLG_ERR:
            	SdError( -1, "SdShowEdit2" );
                nId   = -1;
                bDone = TRUE;

            case DLG_CLOSE:
                SdCloseDlg( hwndDlg, nId, bDone );
			
			default:
            	// check standard handling
                if (SdIsStdButton( nId ) && SdDoStdButton( nId )) then
                	bDone = TRUE;
                endif;
			endswitch;

		endwhile;

	EndDialog( szDlg );
    ReleaseDialog( szDlg );

    SdUnInit();

    // record data produced by this dialog
    SdMakeName( szAppKey, szDlg, szTitle, nSdShowDlgEdit2 );
    SilentWriteData( szAppKey, "szEdit1", DATA_STRING, svEdit1, 0 );
    SilentWriteData( szAppKey, "szEdit2", DATA_STRING, svEdit2, 0 );
    SilentWriteData( szAppKey, "Result", DATA_NUMBER, "", nId );

    return nId;

end;

//---------------------------------------------------------------------------
// Domain Account Dialog
// same as ODlgUserPassword above, but format is:  Domain, Account, Password.
//---------------------------------------------------------------------------
function ODlgDomainAccount(szTitle,szMsg,svEdit1,svEdit2,svEdit3,nSpaceOkInPW,nLockName)
STRING  szDlg, szTemp,szField1,szField2,szField3;
NUMBER  nId, nMessage, nTemp, nAllowPath,nANSIonly;
HWND    hwndDlg,hwndControl;
BOOL    bDone;
begin
    szDlg     = SD_DLG_SHOWDLGEDIT3;
	nSdDialog = SD_NDLG_SHOWDLGEDIT3;
 	szField1 = @LABEL_DOMAIN_ONLY;
 	szField2 = @LABEL_ACCOUNT;
 	szField3 = @LABEL_PASSWORD;
 	nAllowPath = FALSE; //no path chars allowed in entries (ie \ )
 	nANSIonly = TRUE;

    // record data produced by this dialog
	if (MODE=SILENTMODE) then
		SdMakeName( szAppKey, szDlg, szTitle, nSdShowDlgEdit3 );
        SilentReadData( szAppKey, "Result", DATA_NUMBER, szTemp, nId );
        if ((nId != BACK) && (nId != CANCEL)) then
        	SilentReadData( szAppKey, "szEdit1", DATA_STRING, svEdit1, nTemp );
            SilentReadData( szAppKey, "szEdit2", DATA_STRING, svEdit2, nTemp );
            SilentReadData( szAppKey, "szEdit3", DATA_STRING, svEdit3, nTemp );
        endif;

        return nId;
    endif;

    // ensure general initialization is complete
    if (!bSdInit) then
    	SdInit();
    endif;

    if (EzDefineDialog( szDlg, "", "", SD_NDLG_SHOWDLGEDIT3 ) = DLG_ERR) then
    	return -1;
    endif;

    // Loop in dialog until the user selects a standard button
    bDone = FALSE;

    while (!bDone)

    	nId = WaitOnDialog( szDlg );

        switch (nId)
        	case DLG_INIT:
            	if( szMsg != "" ) then
                	SdSetStatic(szDlg, SD_STA_MSG1, szMsg);
                endif;

                if (szField1 != "") then
                	SdSetStatic(szDlg, SD_STA_FIELD1, szField1 );
                endif;

                if (szField2 != "") then
                    SdSetStatic(szDlg, SD_STA_FIELD2, szField2 );
                endif;

                if (szField3 != "") then
                    SdSetStatic(szDlg, SD_STA_FIELD3, szField3 );
                endif;
                CtrlSetText(szDlg, SD_EDIT1, svEdit1);
                CtrlSetText(szDlg, SD_EDIT2, svEdit2);
				CtrlSetText(szDlg, SD_EDIT3, svEdit3);

                hwndDlg = CmdGetHwndDlg( szDlg );
                SdGeneralInit( szDlg, hwndDlg, STYLE_BOLD, szSdProduct );

                if(szTitle != "") then
                    SetWindowText(hwndDlg, szTitle);
                endif;

//this requires a SID resolving mechanism to know what the particular language OS uses for "administrator"
/*
				//gray out account name if admin.
				if(svEdit2 = @ADMINISTRATOR)then
					hwndControl = GetDlgItem(hwndDlg,SD_EDIT2);
					_WinSubEnableWindow ( hwndControl, 0 );
				endif;
*/
				//star out password edit control
				SendMessage(_WinSubGetChildWindow(hwndDlg,SD_EDIT3),EM_SETPASSWORDCHAR, ASTERISK , 0);

				//gray out login if instructed in setup.ini.  Will not gray out if blank.
				if(nLockName && szField2 != "" )then
					hwndControl = GetDlgItem(hwndDlg,SD_EDIT2);
					_WinSubEnableWindow ( hwndControl, 0 );
				endif;

				// Set focus to first empty field in dialog
				if(svEdit1 = "")then
       		       	hwndControl = GetDlgItem(hwndDlg, SD_EDIT1);
       	    	elseif(svEdit2 = "")then
       	        	hwndControl = GetDlgItem(hwndDlg, SD_EDIT2);
       	    	elseif(svEdit3 = "")then
       	        	hwndControl = GetDlgItem(hwndDlg, SD_EDIT3);
				else
 					hwndControl = GetDlgItem(hwndDlg, SD_PBUT_OK);
 				endif;
 				SetFocus(hwndControl);

			case SD_EDIT1:
            	nMessage = CtrlGetSubCommand(szDlg);
                if(nMessage = EDITBOX_CHANGE) then
                	CtrlGetText(szDlg, SD_EDIT1, svEdit1);
                endif;
            case SD_EDIT2:
                nMessage = CtrlGetSubCommand(szDlg);
                if(nMessage = EDITBOX_CHANGE) then
                    CtrlGetText(szDlg, SD_EDIT2, svEdit2);
                endif;
            case SD_EDIT3:
                nMessage = CtrlGetSubCommand(szDlg);
                if(nMessage = EDITBOX_CHANGE) then
                    CtrlGetText(szDlg, SD_EDIT3, svEdit3);
                endif;
            case SD_PBUT_OK:
                nId   = OK;
                bDone = TRUE;
				//blank entry ok, but no spaces or path chars.
                if(OCheckForIllegalChars(svEdit1,szField1,nAllowPath,TRUE,nANSIonly) = FALSE)then
            		bDone = FALSE;
					hwndControl = GetDlgItem(hwndDlg, SD_EDIT1);
      	        	SetFocus(hwndControl);
                endif;
                //check the login name field
                if(OCheckForIllegalChars(svEdit2,szField2,nAllowPath,FALSE,nANSIonly) = FALSE)then
            		bDone = FALSE;
					hwndControl = GetDlgItem(hwndDlg, SD_EDIT2);
      	        	SetFocus(hwndControl);
      	        endif;
				if(bDone)then
                	//check the fields for spaces
	            	if(nSpaceOkInPW = FALSE)then
	                	if(OCheckForSpaceChar(svEdit1,szField1) = FALSE)then
    	               		bDone = FALSE;
    	               	endif;
	                	if(OCheckForSpaceChar(svEdit2,szField2) = FALSE)then
    	               		bDone = FALSE;
    	               	endif;    	               		
	                	if(OCheckForSpaceChar(svEdit3,szField3) = FALSE)then
    	               		bDone = FALSE;
    	               	endif;        	        	
        	        	//in same case also check for a blank password
        	        	if(OCheckForIllegalChars(svEdit3,szField3,nAllowPath,FALSE,nANSIonly) = FALSE)then
        	        		bDone = FALSE;
        	        	endif;
        	        endif;

					//validate the account
					if(bDone)then
//222 temp
//						bDone = _ValidateAccount(svEdit1,svEdit2,svEdit3);
						if(!bDone)then
							//account not validated
							MessageBox(@ERROR_ACCOUNT,WARNING);
						endif;
					endif;

        	        //set focus back to password
            	    if(bDone = FALSE)then
                		hwndControl = GetDlgItem(hwndDlg, SD_EDIT3);
      	        		SetFocus(hwndControl);
      	        	endif;

      	        endif;

			case BACK:
            	nId = BACK;
                bDone  = TRUE;

            case DLG_ERR:
            	SdError( -1, "SdShowEdit3" );
                nId   = -1;
                bDone = TRUE;

            case DLG_CLOSE:
                SdCloseDlg( hwndDlg, nId, bDone );
			
			default:
            	// check standard handling
                if (SdIsStdButton( nId ) && SdDoStdButton( nId )) then
                	bDone = TRUE;
                endif;
		endswitch;

	endwhile;

	EndDialog( szDlg );
    ReleaseDialog( szDlg );

    SdUnInit();

    // record data produced by this dialog
    SdMakeName( szAppKey, szDlg, szTitle, nSdShowDlgEdit2 );
    SilentWriteData( szAppKey, "szEdit1", DATA_STRING, svEdit1, 0 );
    SilentWriteData( szAppKey, "szEdit2", DATA_STRING, svEdit2, 0 );
    SilentWriteData( szAppKey, "szEdit3", DATA_STRING, svEdit3, 0 );
    SilentWriteData( szAppKey, "Result", DATA_NUMBER, "", nId );

    return nId;

end;

//------------------------------------------------------------------------
//   Function: ODlgUserPasswordNoConfirm
//   same as SdShowDlgEdit2 with starred out second field
//------------------------------------------------------------------------
function ODlgUserPasswordNoConfirm(szTitle,szMsg,svEdit1,svEdit2,nSpaceOkInPW,nLockName,nAllowPath,nANSIonly)
STRING  szDlg, szTemp,szField1,szField2,szField3;
NUMBER  nId, nMessage, nTemp,bBlankOk;
HWND    hwndDlg,hwndControl;
BOOL    bDone;
begin
    szDlg     = SD_DLG_SHOWDLGEDIT3;
	nSdDialog = SD_NDLG_SHOWDLGEDIT3;
 	szField1 = @LABEL_LOGIN;
 	szField2 = @LABEL_PASSWORD;
 	bBlankOk = TRUE; //no entry required on all dialogs.

    // record data produced by this dialog
	if (MODE=SILENTMODE) then
		SdMakeName( szAppKey, szDlg, szTitle, nSdShowDlgEdit3 );
        SilentReadData( szAppKey, "Result", DATA_NUMBER, szTemp, nId );
        if ((nId != BACK) && (nId != CANCEL)) then
        	SilentReadData( szAppKey, "szEdit1", DATA_STRING, svEdit1, nTemp );
            SilentReadData( szAppKey, "szEdit2", DATA_STRING, svEdit2, nTemp );
        endif;

        return nId;
    endif;

    // ensure general initialization is complete
    if (!bSdInit) then
    	SdInit();
    endif;

    if (EzDefineDialog( szDlg, "", "", SD_NDLG_SHOWDLGEDIT2 ) = DLG_ERR) then
    	return -1;
    endif;

    // Loop in dialog until the user selects a standard button
    bDone = FALSE;

    while (!bDone)

    	nId = WaitOnDialog( szDlg );

        switch (nId)
        	case DLG_INIT:
            	if( szMsg != "" ) then
                	SdSetStatic(szDlg, SD_STA_MSG1, szMsg);
                endif;

                if (szField1 != "") then
                	SdSetStatic(szDlg, SD_STA_FIELD1, szField1 );
                endif;

                if (szField2 != "") then
                    SdSetStatic(szDlg, SD_STA_FIELD2, szField2 );
                endif;

                CtrlSetText(szDlg, SD_EDIT1, svEdit1);
                CtrlSetText(szDlg, SD_EDIT2, svEdit2);

                CtrlSetText(szDlg, 1, @BUTTON_NEXT);
                CtrlSetText(szDlg, 9, @BUTTON_CANCEL);
                CtrlSetText(szDlg, 12, @BUTTON_BACK);

                hwndDlg = CmdGetHwndDlg( szDlg );
                SdGeneralInit( szDlg, hwndDlg, STYLE_BOLD, szSdProduct );

                if(szTitle != "") then
                    SetWindowText(hwndDlg, szTitle);
                endif;


				//star out password and edit control
				SendMessage(_WinSubGetChildWindow(hwndDlg,SD_EDIT2),EM_SETPASSWORDCHAR, ASTERISK , 0);

				//gray out login if instructed in setup.ini.  Will not gray out if blank.
				if(nLockName && szField1 != "" )then
					hwndControl = GetDlgItem(hwndDlg,SD_EDIT1);
					_WinSubEnableWindow ( hwndControl, 0 );
				endif;

				// Set focus to first empty field in dialog
				if(svEdit1 = "")then
       		       	hwndControl = GetDlgItem(hwndDlg, SD_EDIT1);
       	    	elseif(svEdit2 = "")then
       	        	hwndControl = GetDlgItem(hwndDlg, SD_EDIT2);
 				else
 					hwndControl = GetDlgItem(hwndDlg, SD_PBUT_OK);
 				endif;
 				SetFocus(hwndControl);

			case SD_EDIT1:
            	nMessage = CtrlGetSubCommand(szDlg);

                if(nMessage = EDITBOX_CHANGE) then
                	CtrlGetText(szDlg, SD_EDIT1, svEdit1);
                endif;

            case SD_EDIT2:
                nMessage = CtrlGetSubCommand(szDlg);

                if(nMessage = EDITBOX_CHANGE) then
                    CtrlGetText(szDlg, SD_EDIT2, svEdit2);
                endif;

            case SD_PBUT_OK:
                nId   = OK;
                bDone = TRUE;

               	//check entry lengths
            	if(OCheckStringLength(svEdit1,100,gszHelpUser) =FALSE )then;
					bDone = FALSE;
				endif;

				if(OCheckStringLength(svEdit2,40,gszHelpPassword) =FALSE )then;
					bDone = FALSE;
				endif;

				if (bDone = TRUE) then
	                //check the name field
    	            if(OCheckForIllegalChars(svEdit1,szField1,nAllowPath,FALSE,nANSIonly) = FALSE)then
        	    		bDone = FALSE;
						hwndControl = GetDlgItem(hwndDlg, SD_EDIT1);
      	        		SetFocus(hwndControl);
	                else
    	            	//check the fields for spaces
	    	        	if(nSpaceOkInPW = FALSE)then
	        	        	if(OCheckForSpaceChar(svEdit1,szField1) = FALSE)then
    	        		       		bDone = FALSE;
    	               		endif;
		                	if(OCheckForSpaceChar(svEdit2,szField2) = FALSE)then
    		               		bDone = FALSE;
    		               	endif;    	               		
        		        	
        	    	    	//in same case also check for a blank password
        	        		if(OCheckForIllegalChars(svEdit2,szField2,nAllowPath,bBlankOk,nANSIonly) = FALSE)then
        	        			bDone = FALSE;
	        	        	endif;
    	    	        endif;

 		           		//check to see that it is not blank
							           		
		           		if (StrLength(svEdit2) = 0)then
		           		
                   			bDone = FALSE;
           					MessageBox(@ERROR_PASSWORD_BLANK,WARNING);
           					
		           		endif;
    	
   	
    	    	        //set focus back to password
        	    	    if(bDone = FALSE)then
            	    		hwndControl = GetDlgItem(hwndDlg, SD_EDIT2);
      	        			SetFocus(hwndControl);
      	        		endif;
      	        	endif;
      	        endif;

			case BACK:
            	nId = BACK;
                bDone  = TRUE;

            case DLG_ERR:
            	SdError( -1, "SdShowEdit2" );
                nId   = -1;
                bDone = TRUE;

            case DLG_CLOSE:
                SdCloseDlg( hwndDlg, nId, bDone );
			
			default:
            	// check standard handling
                if (SdIsStdButton( nId ) && SdDoStdButton( nId )) then
                	bDone = TRUE;
                endif;
			endswitch;

		endwhile;

	EndDialog( szDlg );
    ReleaseDialog( szDlg );

    SdUnInit();

    // record data produced by this dialog
    SdMakeName( szAppKey, szDlg, szTitle, nSdShowDlgEdit2 );
    SilentWriteData( szAppKey, "szEdit1", DATA_STRING, svEdit1, 0 );
    SilentWriteData( szAppKey, "szEdit2", DATA_STRING, svEdit2, 0 );
    SilentWriteData( szAppKey, "Result", DATA_NUMBER, "", nId );

    return nId;

end;




